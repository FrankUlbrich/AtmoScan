
/**The MIT License (MIT)
  Copyright (c) 2015 by Daniel Eichhorn
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.
  See more at http://blog.squix.ch
*/
#pragma once

// Created by http://oleddisplay.squix.ch/ Consider a donation
// In case of problems make sure that you are using the font file with the correct version!

// Bodmer fix: End character is 0x7D not 0x7E, so bug in last line of the file corrected
// this avoids screen corruption if ~ is printer

const uint8_t ArialRoundedMTBold_14Bitmaps[] PROGMEM = {

  // Bitmap Data:
  0x00, // ' '
  0xFF, 0xF8, 0xF0, // '!'
  0xDE, 0xF6, // '"'
  0x12, 0x32, 0x36, 0xFF, 0xFF, 0x24, 0xFF, 0xFF, 0x4C, 0x48, // '#'
  0x10, 0x61, 0xF6, 0xAD, 0x7A, 0x1E, 0x0E, 0xD7, 0xAF, 0x5B, 0xE1, 0x02, 0x04, 0x00, // '$'
  0x60, 0x92, 0x22, 0x44, 0x49, 0x07, 0x60, 0x0B, 0x82, 0x48, 0xC9, 0x11, 0x24, 0x18, // '%'
  0x3C, 0x19, 0x82, 0x60, 0xF0, 0x39, 0x33, 0x6C, 0x73, 0x1C, 0xFF, 0x8E, 0x30, // '&'
  0xFC, // '''
  0x32, 0x64, 0xCC, 0xCC, 0xC4, 0x62, 0x30, // '('
  0xC4, 0x62, 0x33, 0x33, 0x32, 0x64, 0xC0, // ')'
  0x21, 0x2A, 0xE5, 0x28, // '*'
  0x18, 0x18, 0x18, 0xFF, 0xFF, 0x18, 0x18, // '+'
  0xF6, // ','
  0xFF, // '-'
  0xF0, // '.'
  0x33, 0x32, 0x66, 0x4C, 0xCC, // '/'
  0x38, 0xFB, 0x9E, 0x3C, 0x78, 0xF1, 0xF6, 0x7C, 0x70, // '0'
  0x19, 0xDF, 0xB1, 0x8C, 0x63, 0x18, 0xC0, // '1'
  0x38, 0xFF, 0x1E, 0x30, 0xC3, 0x0C, 0x30, 0xFF, 0xFC, // '2'
  0x79, 0x9B, 0x10, 0x63, 0xC7, 0x81, 0xC3, 0xC6, 0xF0, // '3'
  0x06, 0x0E, 0x1E, 0x16, 0x26, 0x46, 0xFF, 0xFF, 0x06, 0x06, // '4'
  0x7E, 0xFD, 0x06, 0x0F, 0xD8, 0xC1, 0xC3, 0xCC, 0xF0, // '5'
  0x38, 0xDB, 0x1E, 0x0F, 0xD8, 0xF1, 0xE3, 0x66, 0x78, // '6'
  0xFF, 0xFC, 0x30, 0x41, 0x82, 0x0C, 0x18, 0x30, 0xC0, // '7'
  0x38, 0xDB, 0x1F, 0x63, 0x98, 0xF1, 0xE3, 0xC6, 0xF8, // '8'
  0x3C, 0x66, 0xC3, 0xC3, 0xE7, 0x3F, 0x03, 0xC3, 0x66, 0x3C, // '9'
  0xF0, 0x3C, // ':'
  0xF0, 0x3D, 0x80, // ';'
  0x02, 0x1D, 0xF7, 0x0E, 0x0F, 0x83, 0x81, // '<'
  0xFF, 0xFC, 0x07, 0xFF, 0xE0, // '='
  0x81, 0xC1, 0xF0, 0x70, 0xEF, 0xB8, 0x40, // '>'
  0x3C, 0xFF, 0x1E, 0x30, 0xC7, 0x0C, 0x00, 0x30, 0x60, // '?'
  0x0F, 0x83, 0x06, 0x60, 0x24, 0xED, 0x99, 0x9B, 0x19, 0xB1, 0xBB, 0x12, 0xBF, 0xE4, 0xDC, 0x40, 0x13, 0x06, 0x0F, 0xC0, // '@'
  0x1C, 0x0E, 0x05, 0x06, 0xC3, 0x63, 0x19, 0xFC, 0xFE, 0xC1, 0xE0, 0xC0, // 'A'
  0xFC, 0xFE, 0xC7, 0xC6, 0xFE, 0xFE, 0xC3, 0xC3, 0xFF, 0xFE, // 'B'
  0x3E, 0x3F, 0xB8, 0xF8, 0x3C, 0x06, 0x03, 0x06, 0xC7, 0x7F, 0x0F, 0x00, // 'C'
  0xFE, 0x7F, 0xB0, 0xF8, 0x3C, 0x1E, 0x0F, 0x07, 0x87, 0xFF, 0x7F, 0x00, // 'D'
  0xFE, 0xFF, 0xC0, 0xC0, 0xFE, 0xFE, 0xC0, 0xC0, 0xFF, 0xFF, // 'E'
  0xFF, 0xFF, 0x06, 0x0F, 0xDF, 0xB0, 0x60, 0xC1, 0x80, // 'F'
  0x1E, 0x3F, 0x98, 0xF8, 0x2C, 0x06, 0x3F, 0x1E, 0xC3, 0x7F, 0x9F, 0x00, // 'G'
  0xC1, 0xE0, 0xF0, 0x78, 0x3F, 0xFF, 0xFF, 0x07, 0x83, 0xC1, 0xE0, 0xC0, // 'H'
  0xFF, 0xFF, 0xF0, // 'I'
  0x06, 0x0C, 0x18, 0x30, 0x60, 0xF1, 0xF3, 0x7E, 0x78, // 'J'
  0xC3, 0x63, 0xB3, 0x9B, 0x8F, 0x87, 0x63, 0x19, 0x8E, 0xC3, 0x60, 0xC0, // 'K'
  0xC1, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xFF, 0xFC, // 'L'
  0xE1, 0xFC, 0xFF, 0x3F, 0xCF, 0xD2, 0xF7, 0xBD, 0xEF, 0x7B, 0xCC, 0xF3, 0x30, // 'M'
  0xC1, 0xF0, 0xFC, 0x7E, 0x3D, 0x9E, 0x6F, 0x3F, 0x8F, 0xC3, 0xE0, 0xC0, // 'N'
  0x1E, 0x1F, 0xE6, 0x1B, 0x03, 0xC0, 0xF0, 0x3C, 0x0D, 0x86, 0x7F, 0x87, 0x80, // 'O'
  0xFE, 0xFF, 0xC3, 0xC3, 0xFF, 0xFE, 0xC0, 0xC0, 0xC0, 0xC0, // 'P'
  0x1E, 0x0F, 0xF1, 0x87, 0x60, 0x6C, 0x0D, 0x81, 0xB1, 0x33, 0x7C, 0x7F, 0x83, 0xD8, 0x01, 0x80, // 'Q'
  0xFE, 0xFF, 0xC3, 0xC3, 0xFE, 0xFC, 0xCE, 0xC6, 0xC3, 0xC3, // 'R'
  0x7C, 0xFE, 0xC7, 0xC2, 0x7C, 0x0F, 0xC3, 0xC3, 0x7E, 0x3C, // 'S'
  0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, // 'T'
  0xC1, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0xC7, 0x7F, 0x1F, 0x00, // 'U'
  0xC1, 0xE0, 0xD8, 0xCC, 0x66, 0x31, 0xB0, 0xD8, 0x6C, 0x1C, 0x0E, 0x00, // 'V'
  0xC7, 0x1E, 0x38, 0xF1, 0x46, 0xDB, 0x66, 0xDB, 0x36, 0xD9, 0xA2, 0xC7, 0x1C, 0x38, 0xE1, 0x83, 0x00, // 'W'
  0xC3, 0x66, 0x7E, 0x3C, 0x18, 0x3C, 0x7E, 0x66, 0xC3, 0xC3, // 'X'
  0xC3, 0xC3, 0x66, 0x3E, 0x3C, 0x18, 0x18, 0x18, 0x18, 0x18, // 'Y'
  0x7F, 0x3F, 0x80, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0xC0, // 'Z'
  0xFF, 0xCC, 0xCC, 0xCC, 0xCC, 0xCF, 0xF0, // '['
  0xCC, 0x44, 0x66, 0x22, 0x33, // '\'
  0xFF, 0x33, 0x33, 0x33, 0x33, 0x3F, 0xF0, // ']'
  0x30, 0xE7, 0x9A, 0xCF, 0x30, // '^'
  0xFE, // '_'
  0xD0, // '`'
  0x7D, 0x8C, 0x7F, 0x3C, 0x79, 0xDD, 0x80, // 'a'
  0xC1, 0x83, 0x06, 0xEF, 0xF8, 0xF1, 0xE3, 0xFF, 0xB8, // 'b'
  0x3C, 0xFF, 0x1E, 0x0C, 0x6F, 0xCF, 0x00, // 'c'
  0x06, 0x0C, 0x1B, 0xBF, 0xF8, 0xF1, 0xE3, 0xFE, 0xEC, // 'd'
  0x3C, 0xCF, 0x1F, 0xFC, 0x0C, 0xCF, 0x00, // 'e'
  0x3B, 0x19, 0xF6, 0x31, 0x8C, 0x63, 0x00, // 'f'
  0x77, 0xFF, 0x1E, 0x3C, 0x7F, 0xDD, 0xE3, 0xC6, 0xF8, // 'g'
  0xC1, 0x83, 0x06, 0xEF, 0xF8, 0xF1, 0xE3, 0xC7, 0x8C, // 'h'
  0xF3, 0xFF, 0xF0, // 'i'
  0x33, 0x03, 0x33, 0x33, 0x33, 0x3F, 0xE0, // 'j'
  0xC1, 0x83, 0x06, 0x6D, 0x9E, 0x3E, 0x66, 0xCD, 0x8C, // 'k'
  0xFF, 0xFF, 0xF0, // 'l'
  0xD9, 0xDF, 0xFF, 0x31, 0xE6, 0x3C, 0xC7, 0x98, 0xF3, 0x18, // 'm'
  0xDD, 0xFF, 0x1E, 0x3C, 0x78, 0xF1, 0x80, // 'n'
  0x38, 0xFB, 0x1E, 0x3C, 0x6F, 0x8E, 0x00, // 'o'
  0xDD, 0xFF, 0x1E, 0x3C, 0x7F, 0xF7, 0x60, 0xC1, 0x80, // 'p'
  0x77, 0xFF, 0x1E, 0x3C, 0x7F, 0xDD, 0x83, 0x06, 0x0C, // 'q'
  0xDF, 0xF1, 0x8C, 0x63, 0x00, // 'r'
  0x7B, 0x3E, 0x1E, 0x0F, 0x37, 0x80, // 's'
  0x63, 0x19, 0xF6, 0x31, 0x8C, 0x79, 0xC0, // 't'
  0xC7, 0x8F, 0x1E, 0x3C, 0x7F, 0xDD, 0x80, // 'u'
  0xC7, 0x8D, 0x93, 0x62, 0x87, 0x04, 0x00, // 'v'
  0xC4, 0x79, 0xCD, 0x29, 0x35, 0x67, 0xBC, 0x63, 0x0C, 0x60, // 'w'
  0xC6, 0xD9, 0xF1, 0xC7, 0xCD, 0xB1, 0x80, // 'x'
  0xC7, 0x8D, 0x93, 0x62, 0xC7, 0x06, 0x18, 0xF1, 0xC0, // 'y'
  0xFE, 0x18, 0x61, 0x86, 0x1F, 0xFF, 0x80, // 'z'
  0x19, 0xCC, 0x63, 0x3B, 0x8E, 0x31, 0x8C, 0x71, 0x80, // '{'
  0xFF, 0xFF, 0xFF, 0xC0, // '|'
  0xC7, 0x18, 0xC6, 0x38, 0xEE, 0x63, 0x19, 0xCC, 0x00 // '}'
};
const GFXglyph ArialRoundedMTBold_14Glyphs[] PROGMEM = {
  // bitmapOffset, width, height, xAdvance, xOffset, yOffset
  {     0,   1,   1,   5,    0,    0 }, // ' '
  {     1,   2,  10,   6,    1,  -10 }, // '!'
  {     4,   5,   3,   8,    1,  -10 }, // '"'
  {     6,   8,  10,   9,    0,  -10 }, // '#'
  {    16,   7,  15,   9,    1,  -12 }, // '$'
  {    30,  11,  10,  13,    0,  -10 }, // '%'
  {    44,  10,  10,  12,    1,  -10 }, // '&'
  {    57,   2,   3,   4,    1,  -10 }, // '''
  {    58,   4,  13,   6,    1,  -10 }, // '('
  {    65,   4,  13,   6,    0,  -10 }, // ')'
  {    72,   5,   6,   7,    1,  -11 }, // '*'
  {    76,   8,   7,   9,    0,   -9 }, // '+'
  {    83,   2,   4,   5,    1,   -2 }, // ','
  {    84,   4,   2,   6,    0,   -5 }, // '-'
  {    85,   2,   2,   5,    1,   -2 }, // '.'
  {    86,   4,  10,   5,    0,  -10 }, // '/'
  {    91,   7,  10,   9,    1,  -10 }, // '0'
  {   100,   5,  10,   9,    1,  -10 }, // '1'
  {   107,   7,  10,   9,    1,  -10 }, // '2'
  {   116,   7,  10,   9,    1,  -10 }, // '3'
  {   125,   8,  10,   9,    0,  -10 }, // '4'
  {   135,   7,  10,   9,    1,  -10 }, // '5'
  {   144,   7,  10,   9,    1,  -10 }, // '6'
  {   153,   7,  10,   9,    1,  -10 }, // '7'
  {   162,   7,  10,   9,    1,  -10 }, // '8'
  {   171,   8,  10,   9,    0,  -10 }, // '9'
  {   181,   2,   7,   5,    1,   -7 }, // ':'
  {   183,   2,   9,   5,    1,   -7 }, // ';'
  {   186,   7,   8,   9,    1,   -9 }, // '<'
  {   193,   7,   5,   9,    1,   -7 }, // '='
  {   198,   7,   8,   9,    1,   -9 }, // '>'
  {   205,   7,  10,   9,    1,  -10 }, // '?'
  {   214,  12,  13,  15,    1,  -10 }, // '@'
  {   234,   9,  10,  11,    1,  -10 }, // 'A'
  {   246,   8,  10,  11,    1,  -10 }, // 'B'
  {   256,   9,  10,  11,    1,  -10 }, // 'C'
  {   268,   9,  10,  11,    1,  -10 }, // 'D'
  {   280,   8,  10,  10,    1,  -10 }, // 'E'
  {   290,   7,  10,   9,    1,  -10 }, // 'F'
  {   299,   9,  10,  12,    1,  -10 }, // 'G'
  {   311,   9,  10,  12,    1,  -10 }, // 'H'
  {   323,   2,  10,   5,    1,  -10 }, // 'I'
  {   326,   7,  10,   9,    0,  -10 }, // 'J'
  {   335,   9,  10,  11,    1,  -10 }, // 'K'
  {   347,   7,  10,   9,    1,  -10 }, // 'L'
  {   356,  10,  10,  13,    1,  -10 }, // 'M'
  {   369,   9,  10,  12,    1,  -10 }, // 'N'
  {   381,  10,  10,  12,    1,  -10 }, // 'O'
  {   394,   8,  10,  10,    1,  -10 }, // 'P'
  {   404,  11,  11,  12,    1,  -10 }, // 'Q'
  {   420,   8,  10,  11,    1,  -10 }, // 'R'
  {   430,   8,  10,  10,    1,  -10 }, // 'S'
  {   440,   8,  10,  10,    0,  -10 }, // 'T'
  {   450,   9,  10,  12,    1,  -10 }, // 'U'
  {   462,   9,  10,  11,    0,  -10 }, // 'V'
  {   474,  13,  10,  14,    0,  -10 }, // 'W'
  {   491,   8,  10,   9,    0,  -10 }, // 'X'
  {   501,   8,  10,  10,    0,  -10 }, // 'Y'
  {   511,   9,  10,  10,    0,  -10 }, // 'Z'
  {   523,   4,  13,   6,    1,  -10 }, // '['
  {   530,   4,  10,   5,    0,  -10 }, // '\'
  {   535,   4,  13,   6,    0,  -10 }, // ']'
  {   542,   6,   6,   9,    1,  -10 }, // '^'
  {   547,   7,   1,   8,    0,    1 }, // '_'
  {   548,   2,   2,   6,    1,  -10 }, // '`'
  {   549,   7,   7,   9,    1,   -7 }, // 'a'
  {   556,   7,  10,  10,    1,  -10 }, // 'b'
  {   565,   7,   7,   9,    1,   -7 }, // 'c'
  {   572,   7,  10,  10,    1,  -10 }, // 'd'
  {   581,   7,   7,   9,    1,   -7 }, // 'e'
  {   588,   5,  10,   6,    0,  -10 }, // 'f'
  {   595,   7,  10,  10,    1,   -7 }, // 'g'
  {   604,   7,  10,   9,    1,  -10 }, // 'h'
  {   613,   2,  10,   5,    1,  -10 }, // 'i'
  {   616,   4,  13,   5,   -1,  -10 }, // 'j'
  {   623,   7,  10,   9,    1,  -10 }, // 'k'
  {   632,   2,  10,   5,    1,  -10 }, // 'l'
  {   635,  11,   7,  13,    1,   -7 }, // 'm'
  {   645,   7,   7,   9,    1,   -7 }, // 'n'
  {   652,   7,   7,   9,    1,   -7 }, // 'o'
  {   659,   7,  10,  10,    1,   -7 }, // 'p'
  {   668,   7,  10,  10,    1,   -7 }, // 'q'
  {   677,   5,   7,   7,    1,   -7 }, // 'r'
  {   682,   6,   7,   9,    1,   -7 }, // 's'
  {   688,   5,  10,   6,    0,  -10 }, // 't'
  {   695,   7,   7,   9,    1,   -7 }, // 'u'
  {   702,   7,   7,   9,    0,   -7 }, // 'v'
  {   709,  11,   7,  12,    0,   -7 }, // 'w'
  {   719,   7,   7,   8,    0,   -7 }, // 'x'
  {   726,   7,  10,   9,    0,   -7 }, // 'y'
  {   735,   7,   7,   8,    0,   -7 }, // 'z'
  {   742,   5,  13,   6,    0,  -10 }, // '{'
  {   751,   2,  13,   5,    1,  -10 }, // '|'
  {   755,   5,  13,   6,    1,  -10 } // '}' character 0x7D
};
const GFXfont ArialRoundedMTBold_14 PROGMEM = {    // Last character bug fixed 0x7E to 0x7D
  (uint8_t  *)ArialRoundedMTBold_14Bitmaps, (GFXglyph *)ArialRoundedMTBold_14Glyphs, 0x20, 0x7D, 17
};


// Created by http://oleddisplay.squix.ch/ Consider a donation
// In case of problems make sure that you are using the font file with the correct version!

// Bodmer fix: End character is 0x7D not 0x7E, so bug in last line of the file corrected
// this avoids screen corruption if ~ is printer

// Bodmer change: '`' changed to tiny degree symbol (typically this character is on top left key of a QWERTY keyboard)

const uint8_t ArialRoundedMTBold_36Bitmaps[] PROGMEM = {

  // Bitmap Data:
  0x00, // ' '
  0x77, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE7, 0x39, 0xCE, 0x73, 0x00, 0x00, 0x3B, 0xFF, 0xFB, 0x80, // '!'
  0xFC, 0xFF, 0xF3, 0xFF, 0xCF, 0xFF, 0x3F, 0xFC, 0xFF, 0xF3, 0xFF, 0xCF, 0xDE, 0x1E, 0x78, 0x78, // '"'
  0x01, 0x83, 0x80, 0x78, 0x70, 0x0F, 0x0E, 0x01, 0xC3, 0xC0, 0x78, 0x78, 0x0F, 0x0F, 0x01, 0xE1, 0xE3, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 0x07, 0x87, 0x80, 0xF0, 0xE0, 0x1E, 0x3C, 0x07, 0x87, 0x80, 0xF0, 0xF0, 0x7F, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xE3, 0xC3, 0xC0, 0x78, 0x78, 0x0F, 0x0E, 0x01, 0xC3, 0xC0, 0x78, 0x78, 0x07, 0x06, 0x00, // '#'
  0x00, 0x60, 0x00, 0x0C, 0x00, 0x01, 0x80, 0x00, 0x30, 0x00, 0x7F, 0xE0, 0x3F, 0xFE, 0x0F, 0xFF, 0xE1, 0xF3, 0x7E, 0x7C, 0x67, 0xCF, 0x0C, 0x79, 0xE1, 0x8F, 0x3C, 0x30, 0xC7, 0xC6, 0x00, 0xFE, 0xC0, 0x0F, 0xF8, 0x00, 0xFF, 0xE0, 0x0F, 0xFF, 0x00, 0x7F, 0xF0, 0x01, 0xFF, 0x00, 0x37, 0xE0, 0x06, 0x3E, 0xE0, 0xC3, 0xFC, 0x18, 0x7F, 0xC3, 0x0F, 0xF8, 0x61, 0xEF, 0x8C, 0x79, 0xFD, 0x9F, 0x1F, 0xFF, 0xC1, 0xFF, 0xF0, 0x0F, 0xFC, 0x00, 0x38, 0x00, 0x03, 0x00, 0x00, 0x60, 0x00, 0x0C, 0x00, 0x01, 0x80, 0x00, 0x30, 0x00, 0x06, 0x00, // '$'
  0x1F, 0x00, 0x06, 0x03, 0xFC, 0x00, 0x70, 0x1C, 0x70, 0x03, 0x01, 0xC1, 0x80, 0x38, 0x0E, 0x0E, 0x03, 0x80, 0x70, 0x70, 0x1C, 0x03, 0x83, 0x81, 0xC0, 0x1C, 0x1C, 0x0C, 0x00, 0xE0, 0xE0, 0xE0, 0x07, 0x07, 0x0E, 0x00, 0x1C, 0x70, 0x70, 0x00, 0xFF, 0x87, 0x00, 0x03, 0xF8, 0x30, 0x00, 0x00, 0x03, 0x87, 0xF0, 0x00, 0x38, 0x7F, 0xC0, 0x01, 0xC3, 0x8E, 0x00, 0x1C, 0x38, 0x38, 0x00, 0xC1, 0xC1, 0xC0, 0x0E, 0x0E, 0x0E, 0x00, 0xE0, 0x70, 0x70, 0x07, 0x03, 0x83, 0x80, 0x70, 0x1C, 0x1C, 0x07, 0x00, 0xE0, 0xE0, 0x38, 0x03, 0x8E, 0x03, 0x80, 0x0F, 0xE0, 0x1C, 0x00, 0x3E, 0x00, 0xC0, 0x00, 0x00, // '%'
  0x00, 0xFC, 0x00, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0xE0, 0x01, 0xF0, 0xF0, 0x00, 0xF0, 0x3C, 0x00, 0x78, 0x1E, 0x00, 0x3C, 0x0F, 0x00, 0x1F, 0x0F, 0x80, 0x0F, 0xDF, 0x80, 0x03, 0xFF, 0x80, 0x00, 0xFF, 0x80, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0xC1, 0x81, 0xFF, 0xF0, 0xE1, 0xF9, 0xF8, 0xF8, 0xF8, 0x7E, 0x78, 0xF8, 0x1F, 0xFC, 0x7C, 0x07, 0xFC, 0x3E, 0x01, 0xFE, 0x1F, 0x00, 0x7F, 0x0F, 0xC0, 0x3F, 0xC3, 0xF0, 0x7F, 0xF1, 0xFF, 0xFF, 0xFC, 0x7F, 0xFF, 0x3F, 0x0F, 0xFE, 0x0F, 0x01, 0xFC, 0x03, 0x80, // '&'
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDE, 0x78, // '''
  0x03, 0x81, 0xC1, 0xC1, 0xE0, 0xF0, 0xF0, 0xF8, 0x78, 0x3C, 0x3E, 0x1F, 0x0F, 0x0F, 0x87, 0xC3, 0xE1, 0xF0, 0xF8, 0x7C, 0x3E, 0x1F, 0x0F, 0x83, 0xC1, 0xF0, 0xF8, 0x3C, 0x1E, 0x0F, 0x83, 0xC0, 0xF0, 0x78, 0x1C, 0x07, 0x01, 0x80, // '('
  0xE0, 0x70, 0x1C, 0x0F, 0x03, 0x81, 0xE0, 0xF8, 0x3C, 0x1E, 0x0F, 0x87, 0xC1, 0xE0, 0xF8, 0x7C, 0x3E, 0x1F, 0x0F, 0x87, 0xC3, 0xE1, 0xF0, 0xF8, 0x78, 0x7C, 0x3E, 0x1E, 0x0F, 0x0F, 0x87, 0x83, 0x83, 0xC1, 0xC1, 0xC0, 0xE0, 0x00, // ')'
  0x03, 0x80, 0x07, 0x00, 0x0E, 0x00, 0x1C, 0x0E, 0x38, 0xFF, 0x77, 0xDF, 0xFF, 0x07, 0xF0, 0x07, 0xC0, 0x1D, 0xC0, 0x3B, 0xC0, 0xE3, 0x83, 0xC7, 0x83, 0x06, 0x00, // '*'
  0x01, 0xF0, 0x00, 0x3E, 0x00, 0x07, 0xC0, 0x00, 0xF8, 0x00, 0x1F, 0x00, 0x03, 0xE0, 0x00, 0x7C, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x1F, 0x00, 0x03, 0xE0, 0x00, 0x7C, 0x00, 0x0F, 0x80, 0x01, 0xF0, 0x00, 0x3E, 0x00, // '+'
  0x7B, 0xEF, 0xFF, 0x7C, 0x71, 0xCE, 0x7B, 0xCE, 0x00, // ','
  0x7F, 0xDF, 0xFF, 0xFF, 0xBF, 0xE0, // '-'
  0x77, 0xFF, 0xF7, 0x00, // '.'
  0x03, 0x81, 0xC1, 0xE0, 0xF0, 0x70, 0x78, 0x3C, 0x1E, 0x0E, 0x07, 0x07, 0x83, 0xC1, 0xC0, 0xE0, 0xF0, 0x78, 0x38, 0x1C, 0x1E, 0x0F, 0x07, 0x03, 0x83, 0xC1, 0xE0, 0xE0, 0x70, 0x00, // '/'
  0x03, 0xF0, 0x03, 0xFF, 0x01, 0xFF, 0xE0, 0xFF, 0xFC, 0x3E, 0x1F, 0x1F, 0x03, 0xE7, 0xC0, 0xF9, 0xE0, 0x1E, 0xF8, 0x07, 0xFE, 0x01, 0xFF, 0x80, 0x7F, 0xE0, 0x1F, 0xF8, 0x07, 0xFE, 0x01, 0xFF, 0x80, 0x7F, 0xE0, 0x1F, 0xF8, 0x07, 0xFE, 0x01, 0xF7, 0x80, 0x79, 0xF0, 0x3E, 0x7C, 0x0F, 0x8F, 0x87, 0xC3, 0xFF, 0xF0, 0x7F, 0xF8, 0x0F, 0xFC, 0x00, 0xFC, 0x00, // '0'
  0x00, 0x30, 0x03, 0xC0, 0x3E, 0x03, 0xF0, 0x3F, 0x83, 0xFC, 0x7F, 0xEF, 0xDF, 0xFC, 0xFF, 0xC7, 0xD8, 0x3E, 0x01, 0xF0, 0x0F, 0x80, 0x7C, 0x03, 0xE0, 0x1F, 0x00, 0xF8, 0x07, 0xC0, 0x3E, 0x01, 0xF0, 0x0F, 0x80, 0x7C, 0x03, 0xE0, 0x1F, 0x00, 0xF8, 0x03, 0x80, // '1'
  0x03, 0xF8, 0x03, 0xFF, 0x83, 0xFF, 0xF0, 0xFF, 0xFE, 0x7E, 0x1F, 0x9F, 0x03, 0xFF, 0x80, 0x7F, 0xE0, 0x1F, 0xF0, 0x07, 0xD8, 0x01, 0xF0, 0x00, 0xF8, 0x00, 0x7E, 0x00, 0x1F, 0x00, 0x1F, 0x80, 0x0F, 0xC0, 0x07, 0xE0, 0x03, 0xF0, 0x01, 0xF8, 0x00, 0xFC, 0x00, 0x7E, 0x00, 0x3F, 0x00, 0x1F, 0x80, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0xF0, // '2'
  0x03, 0xF0, 0x07, 0xFF, 0x03, 0xFF, 0xE1, 0xF0, 0xFC, 0x78, 0x1F, 0x1E, 0x03, 0xE7, 0x00, 0xF8, 0x80, 0x3E, 0x00, 0x1F, 0x00, 0x0F, 0xC0, 0x7F, 0xE0, 0x1F, 0xF0, 0x07, 0xFE, 0x01, 0xFF, 0xC0, 0x01, 0xF8, 0x00, 0x3F, 0x00, 0x07, 0xD8, 0x01, 0xFF, 0x00, 0x7F, 0xE0, 0x1F, 0xF8, 0x0F, 0x9F, 0x07, 0xE7, 0xFF, 0xF0, 0xFF, 0xF8, 0x1F, 0xFC, 0x01, 0xFC, 0x00, // '3'
  0x00, 0x0F, 0x00, 0x00, 0xFC, 0x00, 0x07, 0xE0, 0x00, 0x7F, 0x00, 0x07, 0xF8, 0x00, 0x7F, 0xC0, 0x03, 0xFE, 0x00, 0x3D, 0xF0, 0x03, 0xCF, 0x80, 0x3C, 0x7C, 0x03, 0xE3, 0xE0, 0x1E, 0x1F, 0x01, 0xE0, 0xF8, 0x1E, 0x07, 0xC1, 0xF0, 0x3E, 0x0F, 0x01, 0xF0, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xE0, 0x00, 0xF8, 0x00, 0x07, 0xC0, 0x00, 0x3E, 0x00, 0x01, 0xF0, 0x00, 0x0F, 0x80, 0x00, 0x38, 0x00, // '4'
  0x1F, 0xFF, 0x8F, 0xFF, 0xE3, 0xFF, 0xF8, 0xFF, 0xFC, 0x3C, 0x00, 0x0F, 0x00, 0x07, 0xC0, 0x01, 0xF0, 0x00, 0x78, 0x00, 0x1E, 0x7E, 0x07, 0xFF, 0xE1, 0xFF, 0xFC, 0xFF, 0xFF, 0xBF, 0x07, 0xE7, 0x80, 0xFC, 0x80, 0x1F, 0x00, 0x07, 0xC0, 0x01, 0xF6, 0x00, 0x7F, 0xC0, 0x1F, 0xF0, 0x0F, 0xBE, 0x03, 0xE7, 0xC1, 0xF1, 0xFF, 0xF8, 0x1F, 0xFC, 0x01, 0xFC, 0x00, // '5'
  0x03, 0xF8, 0x01, 0xFF, 0x81, 0xFF, 0xF0, 0x7C, 0x7C, 0x3C, 0x0F, 0x9F, 0x03, 0xE7, 0x80, 0x71, 0xE0, 0x00, 0xF8, 0x00, 0x3E, 0x3E, 0x0F, 0xBF, 0xE3, 0xFF, 0xFC, 0xFE, 0x1F, 0xBF, 0x03, 0xEF, 0x80, 0x7F, 0xE0, 0x1F, 0xF8, 0x07, 0xFE, 0x01, 0xF7, 0x80, 0x7D, 0xF0, 0x1F, 0x7C, 0x0F, 0x8F, 0x87, 0xE3, 0xFF, 0xF0, 0x7F, 0xFC, 0x0F, 0xFC, 0x00, 0xFC, 0x00, // '6'
  0x7F, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 0x00, 0x0F, 0x80, 0x07, 0xC0, 0x01, 0xE0, 0x00, 0xF8, 0x00, 0x7C, 0x00, 0x1E, 0x00, 0x0F, 0x80, 0x03, 0xC0, 0x01, 0xF0, 0x00, 0x78, 0x00, 0x3E, 0x00, 0x0F, 0x80, 0x07, 0xC0, 0x01, 0xF0, 0x00, 0x7C, 0x00, 0x3F, 0x00, 0x0F, 0x80, 0x03, 0xE0, 0x00, 0xF8, 0x00, 0x3E, 0x00, 0x0F, 0x80, 0x01, 0xC0, 0x00, // '7'
  0x03, 0xF8, 0x01, 0xFF, 0xC0, 0x7F, 0xFC, 0x1F, 0x0F, 0xC7, 0xC0, 0xFC, 0xF8, 0x0F, 0x9F, 0x01, 0xF3, 0xE0, 0x3E, 0x7C, 0x07, 0xCF, 0x80, 0xF0, 0xF8, 0x7E, 0x0F, 0xFF, 0x80, 0xFF, 0xE0, 0x7F, 0xFE, 0x1F, 0x83, 0xF3, 0xE0, 0x3E, 0xF8, 0x03, 0xFF, 0x00, 0x7F, 0xE0, 0x0F, 0xFC, 0x01, 0xFF, 0x80, 0x3E, 0xF8, 0x0F, 0x9F, 0x83, 0xF1, 0xFF, 0xFC, 0x1F, 0xFF, 0x00, 0x7F, 0x00, // '8'
  0x03, 0xF0, 0x03, 0xFF, 0x03, 0xFF, 0xE0, 0xFF, 0xFC, 0x7E, 0x1F, 0x1F, 0x03, 0xEF, 0x80, 0xFB, 0xE0, 0x1E, 0xF8, 0x07, 0xFE, 0x01, 0xFF, 0x80, 0x7F, 0xE0, 0x1F, 0x7C, 0x0F, 0xDF, 0x87, 0xF3, 0xFF, 0xFC, 0x7F, 0xDF, 0x07, 0xC7, 0xC0, 0x01, 0xF0, 0x00, 0x78, 0xE0, 0x1E, 0x78, 0x0F, 0x9F, 0x03, 0xC3, 0xE3, 0xE0, 0xFF, 0xF8, 0x1F, 0xF8, 0x01, 0xF8, 0x00, // '9'
  0x77, 0xFF, 0xF7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xDF, 0xFF, 0xDC, // ':'
  0x77, 0xFF, 0xF7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xDE, 0xFF, 0xFE, 0x73, 0x9B, 0xDC, 0xC0, // ';'
  0x00, 0x00, 0x40, 0x00, 0x70, 0x00, 0xFC, 0x00, 0xFF, 0x00, 0xFF, 0xC1, 0xFF, 0xE1, 0xFF, 0xC1, 0xFF, 0xC0, 0xFF, 0x80, 0x3F, 0x80, 0x0F, 0xE0, 0x03, 0xFE, 0x00, 0x7F, 0xF0, 0x07, 0xFF, 0x00, 0x7F, 0xF8, 0x03, 0xFF, 0x00, 0x3F, 0xC0, 0x03, 0xF0, 0x00, 0x1C, 0x00, 0x01, // '<'
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, // '='
  0x80, 0x00, 0x38, 0x00, 0x0F, 0xC0, 0x03, 0xFC, 0x00, 0xFF, 0xC0, 0x1F, 0xFE, 0x00, 0xFF, 0xE0, 0x0F, 0xFE, 0x00, 0x7F, 0xC0, 0x07, 0xF0, 0x01, 0xFC, 0x01, 0xFF, 0x03, 0xFF, 0x83, 0xFF, 0x87, 0xFF, 0x83, 0xFF, 0x00, 0xFF, 0x00, 0x3F, 0x00, 0x0E, 0x00, 0x02, 0x00, 0x00, // '>'
  0x03, 0xF8, 0x03, 0xFF, 0x83, 0xFF, 0xF0, 0xFF, 0xFE, 0x7E, 0x1F, 0xBF, 0x03, 0xFF, 0x80, 0x7F, 0xE0, 0x1F, 0x70, 0x07, 0xC8, 0x03, 0xE0, 0x01, 0xF8, 0x00, 0xFC, 0x00, 0x7E, 0x00, 0x3F, 0x00, 0x0F, 0x80, 0x03, 0xC0, 0x01, 0xF0, 0x00, 0x78, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x1F, 0x00, 0x07, 0xC0, 0x01, 0xF0, 0x00, 0x38, 0x00, // '?'
  0x00, 0x07, 0xFE, 0x00, 0x00, 0x0F, 0xFF, 0xF0, 0x00, 0x0F, 0xFF, 0xFE, 0x00, 0x07, 0xE0, 0x0F, 0xE0, 0x07, 0xC0, 0x00, 0x7C, 0x03, 0xE0, 0x00, 0x0F, 0x00, 0xE0, 0x00, 0x01, 0xE0, 0x70, 0x1F, 0x9F, 0x3C, 0x3C, 0x1F, 0xF7, 0xC7, 0x0E, 0x0F, 0xFF, 0xE1, 0xC7, 0x07, 0xE3, 0xF8, 0x39, 0xC3, 0xE0, 0x7E, 0x0E, 0x70, 0xF8, 0x0F, 0x83, 0xB8, 0x7C, 0x03, 0xE0, 0xEE, 0x1F, 0x00, 0xF0, 0x3B, 0x8F, 0x80, 0x3C, 0x0E, 0xE3, 0xE0, 0x1F, 0x07, 0xB8, 0xF8, 0x07, 0xC1, 0xCE, 0x3E, 0x01, 0xE0, 0xF3, 0x8F, 0x80, 0xF8, 0x78, 0xE3, 0xE0, 0x3E, 0x1E, 0x1C, 0x7C, 0x1F, 0x9F, 0x07, 0x1F, 0xFF, 0xFF, 0x81, 0xC3, 0xFF, 0xFF, 0xC0, 0x38, 0x7F, 0xBF, 0xE0, 0x0F, 0x07, 0x87, 0xE0, 0x01, 0xE0, 0x00, 0x00, 0x3C, 0x3C, 0x00, 0x00, 0x3E, 0x07, 0xC0, 0x00, 0x1F, 0x00, 0xFE, 0x00, 0x3F, 0x80, 0x1F, 0xFF, 0xFF, 0x80, 0x00, 0xFF, 0xFF, 0x80, 0x00, 0x07, 0xFF, 0x00, 0x00, // '@'
  0x00, 0x3C, 0x00, 0x00, 0x7E, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x80, 0x01, 0xEF, 0x80, 0x03, 0xE7, 0xC0, 0x03, 0xE7, 0xC0, 0x07, 0xC7, 0xC0, 0x07, 0xC3, 0xE0, 0x07, 0xC3, 0xE0, 0x0F, 0x81, 0xF0, 0x0F, 0x81, 0xF0, 0x1F, 0x81, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x7F, 0xFF, 0xFE, 0x7C, 0x00, 0x7E, 0x7C, 0x00, 0x3E, 0xFC, 0x00, 0x3F, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x1F, 0x70, 0x00, 0x0E, // 'A'
  0x7F, 0xFF, 0x07, 0xFF, 0xFC, 0x3F, 0xFF, 0xF1, 0xFF, 0xFF, 0xCF, 0x80, 0x7F, 0x7C, 0x01, 0xFB, 0xE0, 0x07, 0xDF, 0x00, 0x3E, 0xF8, 0x01, 0xF7, 0xC0, 0x1F, 0x3E, 0x01, 0xF9, 0xFF, 0xFF, 0x8F, 0xFF, 0xF0, 0x7F, 0xFF, 0xE3, 0xFF, 0xFF, 0x9F, 0x00, 0x7E, 0xF8, 0x01, 0xFF, 0xC0, 0x07, 0xFE, 0x00, 0x3F, 0xF0, 0x01, 0xFF, 0x80, 0x1F, 0xFC, 0x01, 0xFB, 0xFF, 0xFF, 0xDF, 0xFF, 0xFC, 0xFF, 0xFF, 0xC3, 0xFF, 0xF8, 0x00, // 'B'
  0x00, 0xFF, 0x00, 0x07, 0xFF, 0x80, 0x3F, 0xFF, 0xC0, 0xFF, 0xFF, 0xC3, 0xF8, 0x1F, 0xC7, 0xE0, 0x1F, 0x9F, 0x80, 0x1F, 0x3E, 0x00, 0x1F, 0x7C, 0x00, 0x3D, 0xF0, 0x00, 0x33, 0xE0, 0x00, 0x07, 0xC0, 0x00, 0x0F, 0x80, 0x00, 0x1F, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x7C, 0x00, 0x04, 0xF8, 0x00, 0x1C, 0xF8, 0x00, 0x7D, 0xF0, 0x00, 0xFB, 0xF0, 0x03, 0xE3, 0xF0, 0x0F, 0xC7, 0xF0, 0x3F, 0x07, 0xFF, 0xFE, 0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xC0, 0x01, 0xFE, 0x00, // 'C'
  0x7F, 0xFE, 0x03, 0xFF, 0xFE, 0x0F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0xF8, 0x07, 0xF3, 0xE0, 0x07, 0xEF, 0x80, 0x1F, 0xBE, 0x00, 0x3E, 0xF8, 0x00, 0xFF, 0xE0, 0x01, 0xFF, 0x80, 0x07, 0xFE, 0x00, 0x1F, 0xF8, 0x00, 0x7F, 0xE0, 0x01, 0xFF, 0x80, 0x07, 0xFE, 0x00, 0x1F, 0xF8, 0x00, 0x7F, 0xE0, 0x03, 0xFF, 0x80, 0x0F, 0xBE, 0x00, 0x7E, 0xF8, 0x01, 0xFB, 0xE0, 0x1F, 0xCF, 0xFF, 0xFE, 0x3F, 0xFF, 0xF0, 0xFF, 0xFF, 0x81, 0xFF, 0xF8, 0x00, // 'D'
  0x7F, 0xFF, 0xEF, 0xFF, 0xFE, 0xFF, 0xFF, 0xEF, 0xFF, 0xFE, 0xF8, 0x00, 0x0F, 0x80, 0x00, 0xF8, 0x00, 0x0F, 0x80, 0x00, 0xF8, 0x00, 0x0F, 0x80, 0x00, 0xFF, 0xFF, 0xCF, 0xFF, 0xFC, 0xFF, 0xFF, 0xCF, 0xFF, 0xFC, 0xF8, 0x00, 0x0F, 0x80, 0x00, 0xF8, 0x00, 0x0F, 0x80, 0x00, 0xF8, 0x00, 0x0F, 0x80, 0x00, 0xF8, 0x00, 0x0F, 0x80, 0x00, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 0xFE, // 'E'
  0x7F, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xF8, 0x00, 0x3E, 0x00, 0x0F, 0x80, 0x03, 0xE0, 0x00, 0xF8, 0x00, 0x3E, 0x00, 0x0F, 0x80, 0x03, 0xFF, 0xF8, 0xFF, 0xFF, 0x3F, 0xFF, 0xCF, 0xFF, 0xE3, 0xE0, 0x00, 0xF8, 0x00, 0x3E, 0x00, 0x0F, 0x80, 0x03, 0xE0, 0x00, 0xF8, 0x00, 0x3E, 0x00, 0x0F, 0x80, 0x03, 0xE0, 0x00, 0xF8, 0x00, 0x1C, 0x00, 0x00, // 'F'
  0x00, 0x7F, 0x80, 0x03, 0xFF, 0xF0, 0x07, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xC1, 0xFE, 0x3F, 0x00, 0x7E, 0x7E, 0x00, 0x3E, 0x7C, 0x00, 0x3E, 0x7C, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x07, 0xFE, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x00, 0x1F, 0x7C, 0x00, 0x1F, 0x7C, 0x00, 0x1F, 0x7E, 0x00, 0x1F, 0x3F, 0x00, 0x3F, 0x1F, 0xC0, 0xFF, 0x1F, 0xFF, 0xFE, 0x07, 0xFF, 0xFC, 0x03, 0xFF, 0xF0, 0x00, 0x7F, 0x80, // 'G'
  0x70, 0x00, 0x77, 0xC0, 0x07, 0xFE, 0x00, 0x3F, 0xF0, 0x01, 0xFF, 0x80, 0x0F, 0xFC, 0x00, 0x7F, 0xE0, 0x03, 0xFF, 0x00, 0x1F, 0xF8, 0x00, 0xFF, 0xC0, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x03, 0xFF, 0x00, 0x1F, 0xF8, 0x00, 0xFF, 0xC0, 0x07, 0xFE, 0x00, 0x3F, 0xF0, 0x01, 0xFF, 0x80, 0x0F, 0xFC, 0x00, 0x7F, 0xE0, 0x03, 0xFF, 0x00, 0x1F, 0xF8, 0x00, 0xFB, 0x80, 0x03, 0x80, // 'H'
  0x77, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0x80, // 'I'
  0x00, 0x07, 0x00, 0x07, 0xC0, 0x03, 0xE0, 0x01, 0xF0, 0x00, 0xF8, 0x00, 0x7C, 0x00, 0x3E, 0x00, 0x1F, 0x00, 0x0F, 0x80, 0x07, 0xC0, 0x03, 0xE0, 0x01, 0xF0, 0x00, 0xF8, 0x00, 0x7C, 0x00, 0x3E, 0x00, 0x1F, 0x70, 0x0F, 0xFC, 0x07, 0xFE, 0x03, 0xFF, 0x01, 0xFF, 0xC1, 0xFB, 0xF1, 0xF9, 0xFF, 0xFC, 0x7F, 0xFC, 0x1F, 0xFC, 0x03, 0xF8, 0x00, // 'J'
  0x70, 0x00, 0xE3, 0xE0, 0x07, 0xCF, 0x80, 0x3F, 0x3E, 0x01, 0xFC, 0xF8, 0x0F, 0xE3, 0xE0, 0x7F, 0x0F, 0x83, 0xF8, 0x3E, 0x1F, 0xC0, 0xF8, 0xFE, 0x03, 0xE7, 0xF0, 0x0F, 0xBF, 0x80, 0x3F, 0xFF, 0x00, 0xFF, 0xFC, 0x03, 0xFF, 0xF8, 0x0F, 0xFB, 0xF0, 0x3F, 0xCF, 0xE0, 0xFE, 0x1F, 0x83, 0xE0, 0x3F, 0x0F, 0x80, 0xFE, 0x3E, 0x01, 0xF8, 0xF8, 0x03, 0xF3, 0xE0, 0x0F, 0xEF, 0x80, 0x1F, 0xBE, 0x00, 0x3F, 0xF8, 0x00, 0xFD, 0xC0, 0x01, 0xE0, // 'K'
  0x70, 0x00, 0x3E, 0x00, 0x0F, 0x80, 0x03, 0xE0, 0x00, 0xF8, 0x00, 0x3E, 0x00, 0x0F, 0x80, 0x03, 0xE0, 0x00, 0xF8, 0x00, 0x3E, 0x00, 0x0F, 0x80, 0x03, 0xE0, 0x00, 0xF8, 0x00, 0x3E, 0x00, 0x0F, 0x80, 0x03, 0xE0, 0x00, 0xF8, 0x00, 0x3E, 0x00, 0x0F, 0x80, 0x03, 0xE0, 0x00, 0xF8, 0x00, 0x3E, 0x00, 0x0F, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0xE0, // 'L'
  0x7E, 0x00, 0x3F, 0x7F, 0x80, 0x3F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x07, 0xFF, 0xFF, 0x07, 0xFF, 0xFF, 0x83, 0xFF, 0xFB, 0xC1, 0xEF, 0xFD, 0xE0, 0xF7, 0xFE, 0xF8, 0xFB, 0xFF, 0x7C, 0x7D, 0xFF, 0x9E, 0x3C, 0xFF, 0xCF, 0x1E, 0x7F, 0xE7, 0xDF, 0x3F, 0xF3, 0xEF, 0x9F, 0xF8, 0xF7, 0x8F, 0xFC, 0x7B, 0xC7, 0xFE, 0x3F, 0xE3, 0xFF, 0x1F, 0xF1, 0xFF, 0x87, 0xF0, 0xFF, 0xC3, 0xF8, 0x7F, 0xE1, 0xFC, 0x3F, 0xF0, 0x7C, 0x1F, 0xF8, 0x3E, 0x0F, 0xB8, 0x0E, 0x03, 0x80, // 'M'
  0x78, 0x00, 0x3B, 0xF0, 0x01, 0xFF, 0xC0, 0x07, 0xFF, 0x80, 0x1F, 0xFF, 0x00, 0x7F, 0xFE, 0x01, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x7F, 0xEF, 0x81, 0xFF, 0x9F, 0x07, 0xFE, 0x7E, 0x1F, 0xF8, 0xF8, 0x7F, 0xE1, 0xF1, 0xFF, 0x87, 0xE7, 0xFE, 0x0F, 0x9F, 0xF8, 0x1F, 0x7F, 0xE0, 0x7F, 0xFF, 0x80, 0xFF, 0xFE, 0x01, 0xFF, 0xF8, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0x80, 0x1F, 0xFE, 0x00, 0x7F, 0xF8, 0x00, 0xFD, 0xC0, 0x01, 0xE0, // 'N'
  0x00, 0xFF, 0x00, 0x01, 0xFF, 0xF0, 0x03, 0xFF, 0xFE, 0x03, 0xFF, 0xFF, 0x83, 0xFC, 0x1F, 0xE1, 0xF8, 0x03, 0xF1, 0xF8, 0x00, 0xFC, 0xF8, 0x00, 0x3E, 0x7C, 0x00, 0x1F, 0x7C, 0x00, 0x07, 0xFE, 0x00, 0x03, 0xFF, 0x00, 0x01, 0xFF, 0x80, 0x00, 0xFF, 0xC0, 0x00, 0x7F, 0xE0, 0x00, 0x3F, 0xF0, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0xBE, 0x00, 0x0F, 0x9F, 0x00, 0x07, 0xCF, 0xC0, 0x07, 0xE3, 0xF0, 0x07, 0xE0, 0xFE, 0x0F, 0xF0, 0x7F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x03, 0xFF, 0xE0, 0x00, 0x3F, 0xC0, 0x00, // 'O'
  0x7F, 0xFC, 0x1F, 0xFF, 0xE3, 0xFF, 0xFE, 0x7F, 0xFF, 0xEF, 0x80, 0xFD, 0xF0, 0x0F, 0xFE, 0x00, 0xFF, 0xC0, 0x1F, 0xF8, 0x03, 0xFF, 0x00, 0x7F, 0xE0, 0x1F, 0xFC, 0x07, 0xEF, 0xFF, 0xFD, 0xFF, 0xFF, 0x3F, 0xFF, 0xC7, 0xFF, 0xE0, 0xF8, 0x00, 0x1F, 0x00, 0x03, 0xE0, 0x00, 0x7C, 0x00, 0x0F, 0x80, 0x01, 0xF0, 0x00, 0x3E, 0x00, 0x07, 0xC0, 0x00, 0xF8, 0x00, 0x0E, 0x00, 0x00, // 'P'
  0x00, 0xFF, 0x00, 0x00, 0xFF, 0xF8, 0x00, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xF0, 0x3F, 0xC1, 0xFE, 0x0F, 0xC0, 0x1F, 0x87, 0xE0, 0x03, 0xF1, 0xF0, 0x00, 0x7C, 0x7C, 0x00, 0x1F, 0x3E, 0x00, 0x03, 0xEF, 0x80, 0x00, 0xFB, 0xE0, 0x00, 0x3E, 0xF8, 0x00, 0x0F, 0xBE, 0x00, 0x03, 0xEF, 0x80, 0x00, 0xFB, 0xE0, 0x00, 0x3E, 0xF8, 0x00, 0x0F, 0x9F, 0x07, 0x07, 0xC7, 0xC1, 0xF1, 0xF1, 0xF8, 0x3F, 0xFC, 0x3F, 0x03, 0xFE, 0x07, 0xF0, 0x7F, 0x81, 0xFF, 0xFF, 0xC0, 0x1F, 0xFF, 0xF8, 0x03, 0xFF, 0xFF, 0x80, 0x1F, 0xE3, 0xF0, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x07, // 'Q'
  0x7F, 0xFF, 0x07, 0xFF, 0xFE, 0x3F, 0xFF, 0xF9, 0xFF, 0xFF, 0xEF, 0x80, 0x3F, 0xFC, 0x00, 0xFF, 0xE0, 0x03, 0xFF, 0x00, 0x1F, 0xF8, 0x00, 0xFF, 0xC0, 0x0F, 0xFE, 0x00, 0xFD, 0xFF, 0xFF, 0xEF, 0xFF, 0xFE, 0x7F, 0xFF, 0xC3, 0xFF, 0xF8, 0x1F, 0x07, 0xE0, 0xF8, 0x1F, 0x87, 0xC0, 0x7E, 0x3E, 0x01, 0xF9, 0xF0, 0x0F, 0xCF, 0x80, 0x3F, 0x7C, 0x00, 0xFF, 0xE0, 0x07, 0xFF, 0x00, 0x1F, 0xF8, 0x00, 0xFB, 0x80, 0x03, 0xC0, // 'R'
  0x03, 0xF8, 0x01, 0xFF, 0xF0, 0x3F, 0xFF, 0x87, 0xFF, 0xFC, 0x7E, 0x0F, 0xCF, 0xC0, 0x7E, 0xF8, 0x03, 0xEF, 0x80, 0x1E, 0xFC, 0x00, 0xCF, 0xF0, 0x00, 0x7F, 0xF0, 0x03, 0xFF, 0xE0, 0x1F, 0xFF, 0x80, 0x7F, 0xFC, 0x00, 0x7F, 0xE0, 0x00, 0x7F, 0x60, 0x03, 0xFF, 0x00, 0x1F, 0xF0, 0x01, 0xFF, 0x80, 0x1F, 0xFC, 0x03, 0xFF, 0xE0, 0x7E, 0x7F, 0xFF, 0xC3, 0xFF, 0xFC, 0x0F, 0xFF, 0x00, 0x3F, 0xC0, // 'S'
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x0F, 0x80, 0x00, 0x7C, 0x00, 0x03, 0xE0, 0x00, 0x1F, 0x00, 0x00, 0xF8, 0x00, 0x07, 0xC0, 0x00, 0x3E, 0x00, 0x01, 0xF0, 0x00, 0x0F, 0x80, 0x00, 0x7C, 0x00, 0x03, 0xE0, 0x00, 0x1F, 0x00, 0x00, 0xF8, 0x00, 0x07, 0xC0, 0x00, 0x3E, 0x00, 0x01, 0xF0, 0x00, 0x0F, 0x80, 0x00, 0x7C, 0x00, 0x03, 0xE0, 0x00, 0x1F, 0x00, 0x00, 0xF8, 0x00, 0x03, 0x80, 0x00, // 'T'
  0x70, 0x00, 0x77, 0xC0, 0x07, 0xFE, 0x00, 0x3F, 0xF0, 0x01, 0xFF, 0x80, 0x0F, 0xFC, 0x00, 0x7F, 0xE0, 0x03, 0xFF, 0x00, 0x1F, 0xF8, 0x00, 0xFF, 0xC0, 0x07, 0xFE, 0x00, 0x3F, 0xF0, 0x01, 0xFF, 0x80, 0x0F, 0xFC, 0x00, 0x7F, 0xE0, 0x03, 0xFF, 0x00, 0x1F, 0xF8, 0x00, 0xFF, 0xC0, 0x07, 0xFE, 0x00, 0x3F, 0xF8, 0x03, 0xF7, 0xC0, 0x1F, 0x3F, 0x83, 0xF8, 0xFF, 0xFF, 0x83, 0xFF, 0xF8, 0x0F, 0xFF, 0x80, 0x1F, 0xF0, 0x00, // 'U'
  0x70, 0x00, 0x1D, 0xF0, 0x00, 0x7F, 0xE0, 0x00, 0xFF, 0xE0, 0x03, 0xF7, 0xC0, 0x07, 0xCF, 0x80, 0x0F, 0x9F, 0x80, 0x3F, 0x1F, 0x00, 0x7C, 0x3F, 0x00, 0xF8, 0x7E, 0x03, 0xE0, 0x7C, 0x07, 0xC0, 0xFC, 0x0F, 0x80, 0xF8, 0x3E, 0x01, 0xF0, 0x7C, 0x03, 0xF0, 0xF8, 0x03, 0xE3, 0xE0, 0x07, 0xC7, 0xC0, 0x07, 0xDF, 0x00, 0x0F, 0xBE, 0x00, 0x1F, 0x7C, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xE0, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x70, 0x00, // 'V'
  0x70, 0x03, 0xC0, 0x0E, 0xF8, 0x07, 0xE0, 0x1F, 0xF8, 0x07, 0xE0, 0x1F, 0xF8, 0x0F, 0xF0, 0x1F, 0xF8, 0x0F, 0xF0, 0x1F, 0x7C, 0x0F, 0xF0, 0x3E, 0x7C, 0x0F, 0xF0, 0x3E, 0x7C, 0x1F, 0xF8, 0x3E, 0x7C, 0x1E, 0x78, 0x3E, 0x3E, 0x1E, 0x78, 0x7C, 0x3E, 0x1E, 0x78, 0x7C, 0x3E, 0x3E, 0x7C, 0x7C, 0x3E, 0x3C, 0x3C, 0x7C, 0x1E, 0x3C, 0x3C, 0x78, 0x1F, 0x7C, 0x3E, 0xF8, 0x1F, 0x78, 0x1E, 0xF8, 0x1F, 0x78, 0x1E, 0xF8, 0x0F, 0x78, 0x1E, 0xF0, 0x0F, 0xF8, 0x1F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x07, 0xF0, 0x0F, 0xE0, 0x07, 0xF0, 0x0F, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x03, 0xE0, 0x07, 0xC0, 0x03, 0xC0, 0x03, 0xC0, // 'W'
  0x38, 0x00, 0x73, 0xE0, 0x07, 0x9F, 0x00, 0x7E, 0xFC, 0x07, 0xE3, 0xF0, 0x3F, 0x1F, 0x83, 0xF0, 0x7E, 0x3F, 0x01, 0xF9, 0xF8, 0x0F, 0xDF, 0x80, 0x3F, 0xF8, 0x00, 0xFF, 0xC0, 0x07, 0xFC, 0x00, 0x1F, 0xC0, 0x00, 0xFE, 0x00, 0x0F, 0xF8, 0x00, 0xFF, 0xE0, 0x07, 0xFF, 0x80, 0x7E, 0xFC, 0x07, 0xE3, 0xF0, 0x7F, 0x1F, 0xC3, 0xF0, 0x7E, 0x3F, 0x01, 0xFB, 0xF0, 0x07, 0xFF, 0x80, 0x3F, 0xF8, 0x00, 0xFB, 0x80, 0x03, 0x80, // 'X'
  0x70, 0x00, 0x77, 0xC0, 0x07, 0xFF, 0x00, 0x3E, 0xF8, 0x03, 0xF7, 0xE0, 0x3F, 0x1F, 0x01, 0xF0, 0xFC, 0x1F, 0x83, 0xF0, 0xF8, 0x0F, 0x8F, 0x80, 0x7E, 0xFC, 0x01, 0xF7, 0xC0, 0x07, 0xFC, 0x00, 0x3F, 0xE0, 0x00, 0xFE, 0x00, 0x03, 0xE0, 0x00, 0x1F, 0x00, 0x00, 0xF8, 0x00, 0x07, 0xC0, 0x00, 0x3E, 0x00, 0x01, 0xF0, 0x00, 0x0F, 0x80, 0x00, 0x7C, 0x00, 0x03, 0xE0, 0x00, 0x1F, 0x00, 0x00, 0xF8, 0x00, 0x03, 0x80, 0x00, // 'Y'
  0x3F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF9, 0xFF, 0xFF, 0xF1, 0xFF, 0xFF, 0xE0, 0x00, 0x1F, 0x80, 0x00, 0x7F, 0x00, 0x01, 0xFC, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xC0, 0x00, 0x3F, 0x00, 0x00, 0xFC, 0x00, 0x03, 0xF0, 0x00, 0x0F, 0xE0, 0x00, 0x3F, 0x80, 0x00, 0x7E, 0x00, 0x01, 0xF8, 0x00, 0x07, 0xE0, 0x00, 0x1F, 0x80, 0x00, 0x7F, 0x00, 0x01, 0xFC, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xC0, 0x00, 0x3F, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xF8, // 'Z'
  0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x3E, 0x0F, 0x83, 0xE0, 0xF8, 0x3E, 0x0F, 0x83, 0xE0, 0xF8, 0x3E, 0x0F, 0x83, 0xE0, 0xF8, 0x3E, 0x0F, 0x83, 0xE0, 0xF8, 0x3E, 0x0F, 0x83, 0xE0, 0xF8, 0x3E, 0x0F, 0x83, 0xE0, 0xF8, 0x3F, 0xFF, 0xFF, 0xFF, 0x7F, 0xC0, // '['
  0x70, 0x3C, 0x07, 0x01, 0xE0, 0x78, 0x1E, 0x03, 0x80, 0xF0, 0x3C, 0x0F, 0x01, 0xC0, 0x78, 0x1E, 0x07, 0x80, 0xE0, 0x3C, 0x0F, 0x03, 0xC0, 0x70, 0x1E, 0x07, 0x81, 0xE0, 0x38, 0x0F, 0x03, 0xC0, 0x60, // '\'
  0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0x07, 0xC1, 0xF0, 0x7C, 0x1F, 0x07, 0xC1, 0xF0, 0x7C, 0x1F, 0x07, 0xC1, 0xF0, 0x7C, 0x1F, 0x07, 0xC1, 0xF0, 0x7C, 0x1F, 0x07, 0xC1, 0xF0, 0x7C, 0x1F, 0x07, 0xC1, 0xF0, 0x7C, 0x1F, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, // ']'
  0x03, 0xE0, 0x01, 0xF0, 0x01, 0xFC, 0x00, 0xFE, 0x00, 0x7F, 0x80, 0x7B, 0xC0, 0x3D, 0xF0, 0x3E, 0xF8, 0x1E, 0x3C, 0x1F, 0x1F, 0x0F, 0x07, 0x8F, 0x83, 0xE7, 0xC1, 0xF7, 0xC0, 0x7C, // '^'
  0xFF, 0xFF, 0xFF, 0xFF, 0xF0, // '_'
  0x0E, 0x1B, 0x11, 0x1B, 0x0E, // '`' Changed into a degree symbol
  0x03, 0xFC, 0x03, 0xFF, 0xE0, 0xFF, 0xFE, 0x3F, 0x07, 0xC7, 0xC0, 0x7C, 0xF0, 0x0F, 0x9C, 0x01, 0xF0, 0x00, 0xFE, 0x01, 0xFF, 0xC3, 0xFF, 0xF8, 0xFF, 0x9F, 0x3F, 0x03, 0xEF, 0x80, 0x7D, 0xF0, 0x0F, 0xBE, 0x03, 0xF7, 0xE1, 0xFE, 0x7F, 0xFF, 0xE7, 0xFE, 0x7C, 0x3E, 0x07, 0x00, // 'a'
  0x70, 0x00, 0x1F, 0x00, 0x03, 0xE0, 0x00, 0x7C, 0x00, 0x0F, 0x80, 0x01, 0xF0, 0x00, 0x3E, 0x00, 0x07, 0xC7, 0xE0, 0xF9, 0xFF, 0x1F, 0x7F, 0xF3, 0xFF, 0xFF, 0x7F, 0x87, 0xEF, 0xE0, 0x7D, 0xF8, 0x0F, 0xFF, 0x00, 0xFF, 0xC0, 0x1F, 0xF8, 0x03, 0xFF, 0x00, 0x7F, 0xE0, 0x0F, 0xFE, 0x03, 0xFF, 0xC0, 0x7D, 0xFE, 0x1F, 0xBF, 0xFF, 0xE7, 0xDF, 0xFC, 0xF9, 0xFF, 0x0E, 0x1F, 0x80, // 'b'
  0x03, 0xF8, 0x03, 0xFF, 0x81, 0xFF, 0xF0, 0xFF, 0xFE, 0x7F, 0x0F, 0xDF, 0x01, 0xFF, 0xC0, 0x3F, 0xE0, 0x04, 0xF8, 0x00, 0x3E, 0x00, 0x0F, 0x80, 0x03, 0xE0, 0x07, 0xFC, 0x03, 0xDF, 0x01, 0xF7, 0xF0, 0xFC, 0xFF, 0xFE, 0x1F, 0xFF, 0x83, 0xFF, 0x80, 0x3F, 0x80, // 'c'
  0x00, 0x01, 0xC0, 0x00, 0x7C, 0x00, 0x0F, 0x80, 0x01, 0xF0, 0x00, 0x3E, 0x00, 0x07, 0xC0, 0x00, 0xF8, 0x3F, 0x1F, 0x1F, 0xF3, 0xE7, 0xFF, 0x7D, 0xFF, 0xFF, 0xBF, 0x0F, 0xF7, 0xC0, 0xFF, 0xF8, 0x0F, 0xFE, 0x01, 0xFF, 0xC0, 0x1F, 0xF8, 0x03, 0xFF, 0x00, 0x7F, 0xE0, 0x1F, 0xFE, 0x03, 0xF7, 0xC0, 0x7E, 0xFC, 0x3F, 0xCF, 0xFF, 0xF9, 0xFF, 0xDF, 0x1F, 0xF3, 0xE0, 0xF8, 0x38, // 'd'
  0x03, 0xF8, 0x03, 0xFF, 0x81, 0xFF, 0xF0, 0xF8, 0x7E, 0x7C, 0x07, 0x9F, 0x01, 0xFF, 0x80, 0x7F, 0xE0, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xE0, 0x00, 0xF8, 0x00, 0x1F, 0x00, 0x77, 0xC0, 0x3C, 0xFC, 0x3F, 0x1F, 0xFF, 0x83, 0xFF, 0xC0, 0x3F, 0x80, // 'e'
  0x01, 0xF8, 0x0F, 0xF8, 0x1F, 0xF8, 0x7F, 0xE0, 0xF8, 0x01, 0xF0, 0x03, 0xE0, 0x3F, 0xF8, 0x7F, 0xF9, 0xFF, 0xF1, 0xFF, 0xC0, 0x7C, 0x00, 0xF8, 0x01, 0xF0, 0x03, 0xE0, 0x07, 0xC0, 0x0F, 0x80, 0x1F, 0x00, 0x3E, 0x00, 0x7C, 0x00, 0xF8, 0x01, 0xF0, 0x03, 0xE0, 0x07, 0xC0, 0x0F, 0x80, 0x0E, 0x00, // 'f'
  0x07, 0xE1, 0xC3, 0xFE, 0x7C, 0xFF, 0xEF, 0xBF, 0xFF, 0xF7, 0xE1, 0xFE, 0xF8, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x1F, 0xF8, 0x03, 0xFF, 0x00, 0x7F, 0xE0, 0x0F, 0xFC, 0x01, 0xFF, 0xC0, 0x7E, 0xF8, 0x0F, 0xDF, 0x87, 0xF9, 0xFF, 0xFF, 0x3F, 0xFB, 0xE3, 0xFE, 0x7C, 0x1F, 0x8F, 0x80, 0x01, 0xF7, 0x00, 0x7E, 0xF0, 0x0F, 0x9F, 0x83, 0xF3, 0xFF, 0xFC, 0x1F, 0xFF, 0x00, 0xFF, 0x80, // 'g'
  0x70, 0x00, 0x3E, 0x00, 0x0F, 0x80, 0x03, 0xE0, 0x00, 0xF8, 0x00, 0x3E, 0x00, 0x0F, 0x80, 0x03, 0xE3, 0xF0, 0xF9, 0xFF, 0x3E, 0xFF, 0xEF, 0xFF, 0xFB, 0xF8, 0x3F, 0xFC, 0x0F, 0xFE, 0x01, 0xFF, 0x80, 0x7F, 0xE0, 0x1F, 0xF8, 0x07, 0xFE, 0x01, 0xFF, 0x80, 0x7F, 0xE0, 0x1F, 0xF8, 0x07, 0xFE, 0x01, 0xFF, 0x80, 0x7F, 0xE0, 0x1F, 0xF8, 0x07, 0xDC, 0x00, 0xE0, // 'h'
  0x77, 0xFF, 0xF7, 0x00, 0x0E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0x80, // 'i'
  0x03, 0x81, 0xF0, 0x7C, 0x1F, 0x03, 0x80, 0x00, 0x00, 0x0E, 0x07, 0xC1, 0xF0, 0x7C, 0x1F, 0x07, 0xC1, 0xF0, 0x7C, 0x1F, 0x07, 0xC1, 0xF0, 0x7C, 0x1F, 0x07, 0xC1, 0xF0, 0x7C, 0x1F, 0x07, 0xC1, 0xF0, 0x7C, 0x1F, 0x07, 0xFF, 0xFF, 0xFB, 0xFE, 0x7E, 0x00, // 'j'
  0x70, 0x00, 0x7C, 0x00, 0x3E, 0x00, 0x1F, 0x00, 0x0F, 0x80, 0x07, 0xC0, 0x03, 0xE0, 0x01, 0xF0, 0x1C, 0xF8, 0x1E, 0x7C, 0x1F, 0x3E, 0x1F, 0x9F, 0x1F, 0x8F, 0x9F, 0x07, 0xDF, 0x03, 0xFF, 0x81, 0xFF, 0xE0, 0xFF, 0xF0, 0x7F, 0x7C, 0x3F, 0x1F, 0x1F, 0x0F, 0x8F, 0x83, 0xE7, 0xC1, 0xFB, 0xE0, 0x7D, 0xF0, 0x1F, 0xF8, 0x0F, 0xB8, 0x03, 0x80, // 'k'
  0x77, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0x80, // 'l'
  0x70, 0xFC, 0x0F, 0x8F, 0x3F, 0xE3, 0xFC, 0xFF, 0xFF, 0x7F, 0xEF, 0xFF, 0xFF, 0xFE, 0xFE, 0x1F, 0xE3, 0xFF, 0xC0, 0xFC, 0x1F, 0xF8, 0x0F, 0x81, 0xFF, 0x80, 0xF8, 0x1F, 0xF8, 0x0F, 0x81, 0xFF, 0x80, 0xF8, 0x1F, 0xF8, 0x0F, 0x81, 0xFF, 0x80, 0xF8, 0x1F, 0xF8, 0x0F, 0x81, 0xFF, 0x80, 0xF8, 0x1F, 0xF8, 0x0F, 0x81, 0xFF, 0x80, 0xF8, 0x1F, 0xF8, 0x0F, 0x81, 0xFF, 0x80, 0xF8, 0x1F, 0x70, 0x07, 0x00, 0xE0, // 'm'
  0x70, 0xFC, 0x3C, 0x7F, 0xCF, 0xBF, 0xFB, 0xFF, 0xFE, 0xFE, 0x0F, 0xFF, 0x03, 0xFF, 0xC0, 0x7F, 0xE0, 0x1F, 0xF8, 0x07, 0xFE, 0x01, 0xFF, 0x80, 0x7F, 0xE0, 0x1F, 0xF8, 0x07, 0xFE, 0x01, 0xFF, 0x80, 0x7F, 0xE0, 0x1F, 0xF8, 0x07, 0xFE, 0x01, 0xF7, 0x00, 0x38, // 'n'
  0x01, 0xF8, 0x00, 0xFF, 0xF0, 0x1F, 0xFF, 0x83, 0xFF, 0xFC, 0x7F, 0x0F, 0xE7, 0xC0, 0x3E, 0xFC, 0x03, 0xFF, 0x80, 0x1F, 0xF8, 0x01, 0xFF, 0x80, 0x1F, 0xF8, 0x01, 0xFF, 0x80, 0x1F, 0xFC, 0x03, 0xF7, 0xC0, 0x3E, 0x7F, 0x0F, 0xE3, 0xFF, 0xFC, 0x1F, 0xFF, 0x80, 0xFF, 0xF0, 0x01, 0xF8, 0x00, // 'o'
  0x70, 0xFC, 0x1F, 0x3F, 0xE3, 0xEF, 0xFE, 0x7F, 0xFF, 0xCF, 0xF0, 0xFD, 0xF8, 0x0F, 0xBF, 0x01, 0xFF, 0xC0, 0x1F, 0xF8, 0x03, 0xFF, 0x00, 0x7F, 0xE0, 0x0F, 0xFC, 0x01, 0xFF, 0xC0, 0x7F, 0xF8, 0x0F, 0xBF, 0xC3, 0xF7, 0xFF, 0xFC, 0xFB, 0xFF, 0x9F, 0x3F, 0xE3, 0xE3, 0xF0, 0x7C, 0x00, 0x0F, 0x80, 0x01, 0xF0, 0x00, 0x3E, 0x00, 0x07, 0xC0, 0x00, 0xF8, 0x00, 0x0E, 0x00, 0x00, // 'p'
  0x07, 0xE1, 0xC3, 0xFE, 0x7C, 0xFF, 0xEF, 0x9F, 0xFF, 0xF7, 0xE1, 0xFE, 0xF8, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x1F, 0xF8, 0x03, 0xFF, 0x00, 0x7F, 0xE0, 0x0F, 0xFC, 0x01, 0xFF, 0xC0, 0x7E, 0xF8, 0x0F, 0xDF, 0x87, 0xF9, 0xFF, 0xFF, 0x3F, 0xFB, 0xE3, 0xFE, 0x7C, 0x1F, 0x0F, 0x80, 0x01, 0xF0, 0x00, 0x3E, 0x00, 0x07, 0xC0, 0x00, 0xF8, 0x00, 0x1F, 0x00, 0x03, 0xE0, 0x00, 0x38, // 'q'
  0x71, 0xE7, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE1, 0x7E, 0x03, 0xF0, 0x1F, 0x00, 0xF8, 0x07, 0xC0, 0x3E, 0x01, 0xF0, 0x0F, 0x80, 0x7C, 0x03, 0xE0, 0x1F, 0x00, 0xF8, 0x07, 0xC0, 0x1C, 0x00, // 'r'
  0x0F, 0xF0, 0x1F, 0xFE, 0x1F, 0xFF, 0x8F, 0x87, 0xEF, 0x81, 0xF7, 0xC0, 0x7B, 0xF0, 0x00, 0xFF, 0x80, 0x3F, 0xF8, 0x0F, 0xFF, 0x00, 0xFF, 0xC0, 0x0F, 0xF6, 0x01, 0xFF, 0x80, 0x7F, 0xE0, 0x3F, 0xF8, 0x3E, 0x7F, 0xFF, 0x1F, 0xFF, 0x03, 0xFC, 0x00, // 's'
  0x0E, 0x00, 0xF8, 0x07, 0xC0, 0x3E, 0x01, 0xF0, 0x0F, 0x80, 0x7C, 0x0F, 0xFC, 0xFF, 0xF7, 0xFF, 0x9F, 0xF8, 0x3E, 0x01, 0xF0, 0x0F, 0x80, 0x7C, 0x03, 0xE0, 0x1F, 0x00, 0xF8, 0x07, 0xC0, 0x3E, 0x01, 0xF0, 0x0F, 0x80, 0x7F, 0xE3, 0xFF, 0x0F, 0xF8, 0x3F, 0x80, // 't'
  0x70, 0x03, 0xBE, 0x01, 0xFF, 0x80, 0x7F, 0xE0, 0x1F, 0xF8, 0x07, 0xFE, 0x01, 0xFF, 0x80, 0x7F, 0xE0, 0x1F, 0xF8, 0x07, 0xFE, 0x01, 0xFF, 0x80, 0x7F, 0xE0, 0x1F, 0xF8, 0x07, 0xFF, 0x03, 0xFF, 0xE3, 0xFD, 0xFF, 0xFF, 0x7F, 0xF7, 0xCF, 0xF8, 0xF0, 0xF8, 0x38, // 'u'
  0x70, 0x03, 0xBC, 0x00, 0xFF, 0x80, 0x7F, 0xE0, 0x1F, 0x7C, 0x07, 0x9F, 0x03, 0xE3, 0xC0, 0xF0, 0xF8, 0x7C, 0x3E, 0x1E, 0x07, 0x87, 0x81, 0xF3, 0xE0, 0x3C, 0xF0, 0x0F, 0x3C, 0x01, 0xFE, 0x00, 0x7F, 0x80, 0x1F, 0xE0, 0x03, 0xF0, 0x00, 0xFC, 0x00, 0x1E, 0x00, // 'v'
  0x70, 0x0F, 0x00, 0xEF, 0x00, 0xF0, 0x0F, 0xF8, 0x1F, 0x81, 0xFF, 0x81, 0xF8, 0x1F, 0x78, 0x1F, 0x81, 0xE7, 0x83, 0xFC, 0x1E, 0x7C, 0x3F, 0xC3, 0xE3, 0xC3, 0xFC, 0x3C, 0x3C, 0x79, 0xE3, 0xC3, 0xE7, 0x9E, 0x7C, 0x1E, 0x79, 0xE7, 0x81, 0xE7, 0x0E, 0x78, 0x0E, 0xF0, 0xF7, 0x00, 0xFF, 0x0F, 0xF0, 0x0F, 0xE0, 0x7F, 0x00, 0x7E, 0x07, 0xE0, 0x07, 0xE0, 0x7E, 0x00, 0x7C, 0x03, 0xE0, 0x03, 0xC0, 0x3C, 0x00, // 'w'
  0x70, 0x07, 0x3C, 0x07, 0xBF, 0x07, 0xEF, 0xC7, 0xE3, 0xE3, 0xE0, 0xFB, 0xE0, 0x7F, 0xE0, 0x1F, 0xF0, 0x07, 0xF0, 0x03, 0xF8, 0x03, 0xFE, 0x01, 0xFF, 0x01, 0xF7, 0xC1, 0xF1, 0xF1, 0xF8, 0xFC, 0xF8, 0x3E, 0xF8, 0x0F, 0xFC, 0x07, 0xDC, 0x01, 0xC0, // 'x'
  0x38, 0x01, 0xCF, 0x80, 0x3D, 0xF0, 0x0F, 0xBE, 0x01, 0xF3, 0xE0, 0x3C, 0x7C, 0x0F, 0x87, 0x81, 0xE0, 0xF8, 0x7C, 0x1F, 0x0F, 0x81, 0xE1, 0xE0, 0x3E, 0x7C, 0x03, 0xCF, 0x00, 0x7D, 0xE0, 0x07, 0xFC, 0x00, 0xFF, 0x00, 0x1F, 0xE0, 0x01, 0xF8, 0x00, 0x3F, 0x00, 0x07, 0xE0, 0x00, 0xF8, 0x00, 0x1F, 0x00, 0x07, 0xC0, 0x1F, 0xF8, 0x07, 0xFE, 0x00, 0x7F, 0xC0, 0x07, 0xE0, 0x00, // 'y'
  0x7F, 0xFF, 0x1F, 0xFF, 0xE7, 0xFF, 0xF9, 0xFF, 0xFE, 0x00, 0x3F, 0x00, 0x1F, 0x80, 0x07, 0xC0, 0x03, 0xE0, 0x01, 0xF0, 0x00, 0xF8, 0x00, 0x7E, 0x00, 0x3F, 0x00, 0x1F, 0x80, 0x0F, 0xC0, 0x07, 0xE0, 0x03, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 0xF8, // 'z'
  0x01, 0xF0, 0x1F, 0xC1, 0xFE, 0x1F, 0xE0, 0xFC, 0x07, 0xC0, 0x3E, 0x01, 0xF0, 0x0F, 0x80, 0x7C, 0x03, 0xE0, 0x1F, 0x01, 0xF8, 0x0F, 0x81, 0xFC, 0x1F, 0xC0, 0xF8, 0x07, 0xF0, 0x1F, 0xC0, 0x3E, 0x01, 0xF8, 0x07, 0xC0, 0x3E, 0x01, 0xF0, 0x0F, 0x80, 0x7C, 0x03, 0xE0, 0x1F, 0x00, 0xFC, 0x07, 0xF8, 0x1F, 0xE0, 0x7F, 0x01, 0xF0, // '{'
  0x6F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x60, // '|'
  0x7C, 0x07, 0xF0, 0x3F, 0xC0, 0xFF, 0x01, 0xF8, 0x07, 0xC0, 0x3E, 0x01, 0xF0, 0x0F, 0x80, 0x7C, 0x03, 0xE0, 0x1F, 0x00, 0xFC, 0x03, 0xE0, 0x1F, 0xC0, 0x7F, 0x00, 0xF8, 0x1F, 0xC1, 0xFC, 0x0F, 0x80, 0xFC, 0x07, 0xC0, 0x3E, 0x01, 0xF0, 0x0F, 0x80, 0x7C, 0x03, 0xE0, 0x1F, 0x01, 0xF8, 0x3F, 0xC3, 0xFC, 0x1F, 0xC0, 0x7C, 0x00 // '}'
};
const GFXglyph ArialRoundedMTBold_36Glyphs[] PROGMEM = {
  // bitmapOffset, width, height, xAdvance, xOffset, yOffset
  {     0,   1,   1,  10,    0,    0 }, // ' '
  {     1,   5,  26,  13,    4,  -26 }, // '!'
  {    18,  14,   9,  18,    2,  -26 }, // '"'
  {    34,  19,  26,  21,    0,  -26 }, // '#'
  {    96,  19,  37,  22,    1,  -30 }, // '$'
  {   184,  29,  27,  32,    1,  -26 }, // '%'
  {   282,  25,  26,  28,    2,  -26 }, // '&'
  {   364,   6,   9,  10,    1,  -26 }, // '''
  {   371,   9,  33,  14,    2,  -26 }, // '('
  {   409,   9,  33,  14,    2,  -26 }, // ')'
  {   447,  15,  14,  17,    0,  -28 }, // '*'
  {   474,  19,  18,  22,    1,  -22 }, // '+'
  {   517,   6,  11,  12,    3,   -5 }, // ','
  {   526,  11,   4,  13,    1,  -11 }, // '-'
  {   532,   5,   5,  12,    3,   -5 }, // '.'
  {   536,   9,  26,  11,    1,  -26 }, // '/'
  {   566,  18,  26,  22,    2,  -26 }, // '0'
  {   625,  13,  26,  22,    2,  -26 }, // '1'
  {   668,  18,  26,  22,    2,  -26 }, // '2'
  {   727,  18,  26,  22,    2,  -26 }, // '3'
  {   786,  21,  26,  22,    0,  -26 }, // '4'
  {   855,  18,  26,  22,    2,  -26 }, // '5'
  {   914,  18,  26,  22,    2,  -26 }, // '6'
  {   973,  18,  26,  22,    3,  -26 }, // '7'
  {  1032,  19,  26,  22,    1,  -26 }, // '8'
  {  1094,  18,  26,  22,    1,  -26 }, // '9'
  {  1153,   5,  19,  12,    3,  -19 }, // ':'
  {  1165,   5,  25,  12,    3,  -19 }, // ';'
  {  1181,  18,  20,  22,    1,  -23 }, // '<'
  {  1226,  18,  13,  22,    2,  -19 }, // '='
  {  1256,  18,  20,  22,    1,  -23 }, // '>'
  {  1301,  18,  26,  22,    1,  -26 }, // '?'
  {  1360,  34,  33,  36,    1,  -26 }, // '@'
  {  1501,  24,  26,  27,    1,  -26 }, // 'A'
  {  1579,  21,  26,  27,    3,  -26 }, // 'B'
  {  1648,  23,  26,  28,    2,  -26 }, // 'C'
  {  1723,  22,  26,  28,    3,  -26 }, // 'D'
  {  1795,  20,  26,  25,    3,  -26 }, // 'E'
  {  1860,  18,  26,  23,    3,  -26 }, // 'F'
  {  1919,  24,  26,  30,    2,  -26 }, // 'G'
  {  1997,  21,  26,  28,    3,  -26 }, // 'H'
  {  2066,   5,  26,  12,    3,  -26 }, // 'I'
  {  2083,  17,  26,  22,    1,  -26 }, // 'J'
  {  2139,  22,  26,  28,    3,  -26 }, // 'K'
  {  2211,  18,  26,  23,    3,  -26 }, // 'L'
  {  2270,  25,  26,  31,    3,  -26 }, // 'M'
  {  2352,  22,  26,  28,    3,  -26 }, // 'N'
  {  2424,  25,  26,  30,    2,  -26 }, // 'O'
  {  2506,  19,  26,  25,    3,  -26 }, // 'P'
  {  2568,  26,  28,  30,    2,  -26 }, // 'Q'
  {  2659,  21,  26,  27,    3,  -26 }, // 'R'
  {  2728,  20,  26,  25,    2,  -26 }, // 'S'
  {  2793,  21,  26,  24,    1,  -26 }, // 'T'
  {  2862,  21,  26,  28,    3,  -26 }, // 'U'
  {  2931,  23,  26,  26,    1,  -26 }, // 'V'
  {  3006,  32,  26,  35,    1,  -26 }, // 'W'
  {  3110,  21,  26,  23,    0,  -26 }, // 'X'
  {  3179,  21,  26,  24,    1,  -26 }, // 'Y'
  {  3248,  23,  26,  24,    0,  -26 }, // 'Z'
  {  3323,  10,  33,  14,    2,  -26 }, // '['
  {  3365,  10,  26,  11,    0,  -26 }, // '\'
  {  3398,  10,  33,  14,    0,  -26 }, // ']'
  {  3440,  17,  14,  22,    2,  -26 }, // '^'
  {  3470,  18,   2,  19,    0,    3 }, // '_'
  {  3475,   8,   5,  10,    0,  -26 }, // '`' Changed to degree symbol
  {  3480,  19,  19,  22,    1,  -19 }, // 'a'
  {  3526,  19,  26,  24,    2,  -26 }, // 'b'
  {  3588,  18,  19,  22,    1,  -19 }, // 'c'
  {  3631,  19,  26,  24,    1,  -26 }, // 'd'
  {  3693,  18,  19,  22,    2,  -19 }, // 'e'
  {  3736,  15,  26,  13,   -1,  -26 }, // 'f'
  {  3785,  19,  26,  24,    1,  -19 }, // 'g'
  {  3847,  18,  26,  23,    2,  -26 }, // 'h'
  {  3906,   5,  26,  11,    2,  -26 }, // 'i'
  {  3923,  10,  33,  11,   -3,  -26 }, // 'j'
  {  3965,  17,  26,  22,    3,  -26 }, // 'k'
  {  4021,   5,  26,  11,    2,  -26 }, // 'l'
  {  4038,  28,  19,  33,    2,  -19 }, // 'm'
  {  4105,  18,  19,  23,    2,  -19 }, // 'n'
  {  4148,  20,  19,  23,    1,  -19 }, // 'o'
  {  4196,  19,  26,  24,    2,  -19 }, // 'p'
  {  4258,  19,  26,  24,    1,  -19 }, // 'q'
  {  4320,  13,  19,  17,    2,  -19 }, // 'r'
  {  4351,  17,  19,  21,    1,  -19 }, // 's'
  {  4392,  13,  26,  14,    0,  -26 }, // 't'
  {  4435,  18,  19,  23,    2,  -19 }, // 'u'
  {  4478,  18,  19,  21,    1,  -19 }, // 'v'
  {  4521,  28,  19,  30,    1,  -19 }, // 'w'
  {  4588,  17,  19,  20,    1,  -19 }, // 'x'
  {  4629,  19,  26,  21,    0,  -19 }, // 'y'
  {  4691,  18,  19,  20,    1,  -19 }, // 'z'
  {  4734,  13,  33,  15,    1,  -26 }, // '{'
  {  4788,   4,  33,  11,    3,  -26 }, // '|'
  {  4805,  13,  33,  15,    0,  -26 } // '}' character 0x7D
};
const GFXfont ArialRoundedMTBold_36 PROGMEM = {    // Last character bug fixed 0x7E to 0x7D
  (uint8_t  *)ArialRoundedMTBold_36Bitmaps, (GFXglyph *)ArialRoundedMTBold_36Glyphs, 0x20, 0x7D, 43
};




// Created by http://oleddisplay.squix.ch/ Consider a donation
// In case of problems make sure that you are using the font file with the correct version!
const uint8_t Dialog_plain_9Bitmaps[] PROGMEM = {

  // Bitmap Data:
  0x00, // ' '
  0xF2, // '!'
  0xB4, // '"'
  0x14, 0x29, 0xF9, 0x47, 0xC5, 0x14, 0x00, // '#'
  0x2F, 0xAE, 0x33, 0xF2, // '$'
  0xE4, 0xA8, 0xA8, 0xF6, 0x29, 0x29, 0x06, // '%'
  0x30, 0x81, 0x03, 0x09, 0x51, 0x1D, 0x00, // '&'
  0xC0, // '''
  0x52, 0x49, 0x22, // '('
  0x48, 0x92, 0x52, // ')'
  0x23, 0x9C, 0x40, // '*'
  0x10, 0x21, 0xF0, 0x81, 0x00, // '+'
  0x50, // ','
  0xE0, // '-'
  0x80, // '.'
  0x22, 0x44, 0x48, 0x88, // '/'
  0x76, 0xE3, 0x18, 0xED, 0xC0, // '0'
  0xE1, 0x08, 0x42, 0x11, 0xC0, // '1'
  0x70, 0x20, 0x84, 0x21, 0x07, 0x80, // '2'
  0x70, 0x42, 0x60, 0x85, 0xC0, // '3'
  0x31, 0x94, 0xA9, 0x7C, 0x40, // '4'
  0x72, 0x1C, 0x10, 0x85, 0xC0, // '5'
  0x7E, 0x3D, 0x18, 0xC5, 0xC0, // '6'
  0x78, 0x44, 0x21, 0x10, 0x80, // '7'
  0x69, 0x96, 0x99, 0x60, // '8'
  0x74, 0x63, 0x17, 0x8F, 0xC0, // '9'
  0x88, // ':'
  0x40, 0x50, // ';'
  0x00, 0x37, 0x30, 0x38, 0x10, // '<'
  0x7E, 0x01, 0xF8, // '='
  0x03, 0x03, 0x83, 0x72, 0x00, // '>'
  0x71, 0x12, 0x20, 0x20, // '?'
  0x3C, 0x42, 0x9D, 0xA5, 0xA5, 0x9E, 0x40, 0x3C, // '@'
  0x30, 0x61, 0x42, 0x47, 0x90, 0xA1, 0x00, // 'A'
  0xF4, 0xA5, 0xC9, 0xC7, 0xC0, // 'B'
  0x7B, 0x18, 0x20, 0x83, 0x17, 0x80, // 'C'
  0xF2, 0x38, 0x61, 0x86, 0x3F, 0x00, // 'D'
  0xF4, 0x21, 0xE8, 0x43, 0xC0, // 'E'
  0xF8, 0x8F, 0x88, 0x80, // 'F'
  0x7B, 0x18, 0x23, 0x87, 0x17, 0x80, // 'G'
  0x8C, 0x63, 0xF8, 0xC6, 0x20, // 'H'
  0xFE, // 'I'
  0x24, 0x92, 0x49, 0x40, // 'J'
  0x9A, 0xCE, 0x30, 0xA2, 0x48, 0x80, // 'K'
  0x84, 0x21, 0x08, 0x43, 0xC0, // 'L'
  0xCF, 0x3D, 0x6D, 0xB6, 0x18, 0x40, // 'M'
  0xCE, 0x73, 0x5A, 0xCE, 0x60, // 'N'
  0x7B, 0x38, 0x61, 0x87, 0x37, 0x80, // 'O'
  0xE9, 0x99, 0xE8, 0x80, // 'P'
  0x7B, 0x38, 0x61, 0x87, 0x37, 0x02, // 'Q'
  0xE4, 0xA5, 0xC9, 0x4A, 0x20, // 'R'
  0x7C, 0x20, 0xE0, 0x87, 0xC0, // 'S'
  0x7C, 0x20, 0x40, 0x81, 0x02, 0x04, 0x00, // 'T'
  0x8C, 0x63, 0x18, 0xC5, 0xC0, // 'U'
  0x84, 0x89, 0x22, 0x43, 0x06, 0x0C, 0x00, // 'V'
  0x89, 0x2C, 0x95, 0x4A, 0xA5, 0x53, 0x10, 0x88, // 'W'
  0x49, 0x23, 0x0C, 0x31, 0x24, 0x40, // 'X'
  0x44, 0x50, 0xA0, 0x81, 0x02, 0x04, 0x00, // 'Y'
  0xFC, 0x21, 0x08, 0x43, 0x0F, 0xC0, // 'Z'
  0xD2, 0x49, 0x24, 0xC0, // '['
  0x88, 0x44, 0x44, 0x22, // '\'
  0x64, 0x92, 0x49, 0x60, // ']'
  0x18, 0x49, 0x08, // '^'
  0x7C, // '_'
  0x48, // '`'
  0xE1, 0xF9, 0xF0, // 'a'
  0x88, 0xE9, 0x99, 0xE0, // 'b'
  0x74, 0x21, 0x07, 0x00, // 'c'
  0x11, 0x79, 0x99, 0x70, // 'd'
  0x74, 0x7F, 0x07, 0x80, // 'e'
  0x74, 0xE4, 0x44, 0x40, // 'f'
  0x79, 0x99, 0x71, 0x60, // 'g'
  0x88, 0xF9, 0x99, 0x90, // 'h'
  0xBE, // 'i'
  0x45, 0x55, 0xC0, // 'j'
  0x84, 0x25, 0x4C, 0x52, 0x40, // 'k'
  0xFE, // 'l'
  0xEF, 0x26, 0x4C, 0x99, 0x20, // 'm'
  0xF9, 0x99, 0x90, // 'n'
  0x74, 0x63, 0x17, 0x00, // 'o'
  0xE9, 0x99, 0xE8, 0x80, // 'p'
  0x79, 0x99, 0x71, 0x10, // 'q'
  0x0E, 0x88, 0x88, // 'r'
  0x7A, 0x0C, 0x17, 0x80, // 's'
  0x44, 0xF4, 0x44, 0x70, // 't'
  0x09, 0x99, 0x9F, // 'u'
  0x89, 0x25, 0x14, 0x20, // 'v'
  0x92, 0xB5, 0xB3, 0x62, 0x40, // 'w'
  0x49, 0x42, 0x14, 0x48, // 'x'
  0x89, 0x45, 0x0C, 0x20, 0x84, 0x00, // 'y'
  0xF1, 0x68, 0xF0, // 'z'
  0x31, 0x08, 0x44, 0x10, 0x84, 0x30, // '{'
  0xFF, 0x80, // '|'
  0x61, 0x08, 0x41, 0x10, 0x84, 0x60 // '}'
};
const GFXglyph Dialog_plain_9Glyphs[] PROGMEM = {
  // bitmapOffset, width, height, xAdvance, xOffset, yOffset
  {     0,   1,   1,   4,    0,    0 }, // ' '
  {     1,   1,   7,   4,    1,   -7 }, // '!'
  {     2,   3,   2,   6,    1,   -7 }, // '"'
  {     3,   7,   7,   9,    0,   -7 }, // '#'
  {    10,   4,   8,   7,    1,   -7 }, // '$'
  {    14,   8,   7,  11,    1,   -7 }, // '%'
  {    21,   7,   7,   9,    1,   -7 }, // '&'
  {    28,   1,   2,   4,    1,   -7 }, // '''
  {    29,   3,   8,   5,    1,   -7 }, // '('
  {    32,   3,   8,   5,    0,   -7 }, // ')'
  {    35,   5,   4,   6,    0,   -7 }, // '*'
  {    38,   7,   5,   8,    0,   -5 }, // '+'
  {    43,   2,   2,   4,    0,   -1 }, // ','
  {    44,   3,   1,   4,    0,   -3 }, // '-'
  {    45,   1,   1,   4,    1,   -1 }, // '.'
  {    46,   4,   8,   4,    0,   -7 }, // '/'
  {    50,   5,   7,   8,    1,   -7 }, // '0'
  {    55,   5,   7,   7,    1,   -7 }, // '1'
  {    60,   6,   7,   7,    0,   -7 }, // '2'
  {    66,   5,   7,   7,    0,   -7 }, // '3'
  {    71,   5,   7,   7,    1,   -7 }, // '4'
  {    76,   5,   7,   7,    0,   -7 }, // '5'
  {    81,   5,   7,   8,    1,   -7 }, // '6'
  {    86,   5,   7,   7,    0,   -7 }, // '7'
  {    91,   4,   7,   7,    1,   -7 }, // '8'
  {    95,   5,   7,   8,    1,   -7 }, // '9'
  {   100,   1,   5,   4,    1,   -5 }, // ':'
  {   101,   2,   6,   4,    0,   -5 }, // ';'
  {   103,   6,   6,   8,    1,   -6 }, // '<'
  {   108,   7,   3,   9,    0,   -4 }, // '='
  {   111,   6,   6,   8,    1,   -6 }, // '>'
  {   116,   4,   7,   6,    0,   -7 }, // '?'
  {   120,   8,   8,  11,    1,   -6 }, // '@'
  {   128,   7,   7,   7,    0,   -7 }, // 'A'
  {   135,   5,   7,   8,    1,   -7 }, // 'B'
  {   140,   6,   7,   8,    1,   -7 }, // 'C'
  {   146,   6,   7,   9,    1,   -7 }, // 'D'
  {   152,   5,   7,   7,    1,   -7 }, // 'E'
  {   157,   4,   7,   6,    1,   -7 }, // 'F'
  {   161,   6,   7,   9,    1,   -7 }, // 'G'
  {   167,   5,   7,   8,    1,   -7 }, // 'H'
  {   172,   1,   7,   4,    1,   -7 }, // 'I'
  {   173,   3,   9,   4,   -1,   -7 }, // 'J'
  {   177,   6,   7,   7,    1,   -7 }, // 'K'
  {   183,   5,   7,   6,    1,   -7 }, // 'L'
  {   188,   6,   7,   9,    1,   -7 }, // 'M'
  {   194,   5,   7,   8,    1,   -7 }, // 'N'
  {   199,   6,   7,   9,    1,   -7 }, // 'O'
  {   205,   4,   7,   7,    1,   -7 }, // 'P'
  {   209,   6,   8,   9,    1,   -7 }, // 'Q'
  {   215,   5,   7,   7,    1,   -7 }, // 'R'
  {   220,   5,   7,   8,    1,   -7 }, // 'S'
  {   225,   7,   7,   6,   -1,   -7 }, // 'T'
  {   232,   5,   7,   8,    1,   -7 }, // 'U'
  {   237,   7,   7,   7,    0,   -7 }, // 'V'
  {   244,   9,   7,  10,    0,   -7 }, // 'W'
  {   252,   6,   7,   7,    0,   -7 }, // 'X'
  {   258,   7,   7,   6,   -1,   -7 }, // 'Y'
  {   265,   6,   7,   8,    1,   -7 }, // 'Z'
  {   271,   3,   9,   5,    1,   -7 }, // '['
  {   275,   4,   8,   4,    0,   -7 }, // '\'
  {   279,   3,   9,   5,    0,   -7 }, // ']'
  {   283,   7,   3,   9,    0,   -7 }, // '^'
  {   286,   6,   1,   6,   -1,    1 }, // '_'
  {   287,   3,   2,   6,    0,   -8 }, // '`'
  {   288,   4,   5,   7,    1,   -5 }, // 'a'
  {   291,   4,   7,   7,    1,   -7 }, // 'b'
  {   295,   5,   5,   7,    1,   -5 }, // 'c'
  {   299,   4,   7,   7,    1,   -7 }, // 'd'
  {   303,   5,   5,   8,    1,   -5 }, // 'e'
  {   307,   4,   7,   4,    0,   -7 }, // 'f'
  {   311,   4,   7,   7,    1,   -5 }, // 'g'
  {   315,   4,   7,   7,    1,   -7 }, // 'h'
  {   319,   1,   7,   4,    1,   -7 }, // 'i'
  {   320,   2,   9,   4,    0,   -7 }, // 'j'
  {   323,   5,   7,   7,    1,   -7 }, // 'k'
  {   328,   1,   7,   4,    1,   -7 }, // 'l'
  {   329,   7,   5,  10,    1,   -5 }, // 'm'
  {   334,   4,   5,   7,    1,   -5 }, // 'n'
  {   337,   5,   5,   8,    1,   -5 }, // 'o'
  {   341,   4,   7,   7,    1,   -5 }, // 'p'
  {   345,   4,   7,   7,    1,   -5 }, // 'q'
  {   349,   4,   6,   5,    1,   -6 }, // 'r'
  {   352,   5,   5,   7,    0,   -5 }, // 's'
  {   356,   4,   7,   5,    0,   -7 }, // 't'
  {   360,   4,   6,   7,    1,   -6 }, // 'u'
  {   363,   6,   5,   6,    0,   -5 }, // 'v'
  {   367,   7,   5,   8,    0,   -5 }, // 'w'
  {   372,   6,   5,   6,    0,   -5 }, // 'x'
  {   376,   6,   7,   6,    0,   -5 }, // 'y'
  {   382,   4,   5,   7,    1,   -5 }, // 'z'
  {   385,   5,   9,   6,    0,   -7 }, // '{'
  {   391,   1,   9,   4,    1,   -7 }, // '|'
  {   393,   5,   9,   6,    0,   -7 } // '}'
};
const GFXfont Dialog_plain_9 PROGMEM = {
  (uint8_t  *)Dialog_plain_9Bitmaps, (GFXglyph *)Dialog_plain_9Glyphs, 0x20, 0x7D, 12
};


//----

// Created by http://oleddisplay.squix.ch/ Consider a donation
// In case of problems make sure that you are using the font file with the correct version!
const uint8_t Dialog_plain_12Bitmaps[] PROGMEM = {

  // Bitmap Data:
  0x00, // ' '
  0xFC, 0x80, // '!'
  0xB6, 0x80, // '"'
  0x09, 0x02, 0x40, 0xA0, 0xFE, 0x12, 0x1F, 0xC1, 0x40, 0x90, 0x24, 0x00, // '#'
  0x21, 0xFA, 0x68, 0xE1, 0xE2, 0xC9, 0x2F, 0xE2, 0x00, // '$'
  0x61, 0x24, 0x89, 0x22, 0x50, 0x69, 0x82, 0x91, 0x24, 0x49, 0x21, 0x80, // '%'
  0x38, 0x20, 0x10, 0x0C, 0x0D, 0x34, 0xD2, 0x39, 0x8C, 0x7B, 0x00, // '&'
  0xE0, // '''
  0x4A, 0x49, 0x24, 0x89, 0x00, // '('
  0x49, 0x12, 0x49, 0x29, 0x00, // ')'
  0x10, 0xA8, 0xE3, 0xE1, 0x00, // '*'
  0x10, 0x10, 0x10, 0x10, 0xFF, 0x10, 0x10, 0x10, // '+'
  0x58, // ','
  0xE0, // '-'
  0x80, // '.'
  0x10, 0x88, 0x42, 0x21, 0x08, 0x44, 0x20, // '/'
  0x79, 0x28, 0x61, 0x86, 0x18, 0x52, 0x78, // '0'
  0x70, 0x41, 0x04, 0x10, 0x41, 0x04, 0x7C, // '1'
  0xF4, 0x42, 0x11, 0x11, 0x98, 0xF8, // '2'
  0x78, 0x10, 0x4E, 0x0C, 0x10, 0x63, 0xF8, // '3'
  0x18, 0x30, 0xA3, 0x44, 0x91, 0x3F, 0x04, 0x08, // '4'
  0x79, 0x04, 0x1E, 0x0C, 0x10, 0x63, 0xF8, // '5'
  0x3D, 0x08, 0x2E, 0xCE, 0x18, 0x53, 0x78, // '6'
  0xFC, 0x30, 0x86, 0x10, 0x43, 0x08, 0x60, // '7'
  0x7A, 0x18, 0x61, 0x7B, 0x38, 0x61, 0x78, // '8'
  0x7B, 0x28, 0x61, 0xCD, 0xD0, 0x42, 0xF0, // '9'
  0x84, // ':'
  0x40, 0x16, // ';'
  0x00, 0x07, 0x1C, 0xE0, 0xE0, 0x38, 0x07, 0x00, // '<'
  0xFF, 0x00, 0x00, 0xFF, // '='
  0x00, 0xC0, 0x38, 0x0E, 0x07, 0x38, 0xC0, 0x00, // '>'
  0x70, 0x42, 0x33, 0x10, 0x80, 0x20, // '?'
  0x1E, 0x08, 0x64, 0x0A, 0x3D, 0x91, 0x64, 0x59, 0x16, 0x3E, 0x40, 0x08, 0x41, 0xE0, // '@'
  0x18, 0x0C, 0x0D, 0x04, 0x82, 0x43, 0x11, 0xF8, 0x86, 0xC1, 0x00, // 'A'
  0xFA, 0x18, 0x61, 0xFA, 0x18, 0x61, 0xF8, // 'B'
  0x3C, 0x86, 0x04, 0x08, 0x10, 0x20, 0x21, 0x3C, // 'C'
  0xF9, 0x0A, 0x0C, 0x18, 0x30, 0x60, 0xC2, 0xF8, // 'D'
  0xFA, 0x08, 0x20, 0xFA, 0x08, 0x20, 0xF8, // 'E'
  0xFC, 0x21, 0x0F, 0x42, 0x10, 0x80, // 'F'
  0x3E, 0x41, 0x80, 0x80, 0x87, 0x81, 0x81, 0x41, 0x3E, // 'G'
  0x83, 0x06, 0x0C, 0x1F, 0xF0, 0x60, 0xC1, 0x82, // 'H'
  0xFF, 0x80, // 'I'
  0x24, 0x92, 0x49, 0x24, 0xE0, // 'J'
  0x8D, 0x32, 0xC7, 0x0C, 0x14, 0x24, 0x44, 0x84, // 'K'
  0x82, 0x08, 0x20, 0x82, 0x08, 0x20, 0xF8, // 'L'
  0xC3, 0xC3, 0xA5, 0xA5, 0xA5, 0x99, 0x99, 0x81, 0x81, // 'M'
  0xC3, 0x86, 0x8D, 0x99, 0x33, 0x62, 0xC3, 0x86, // 'N'
  0x3C, 0x42, 0x81, 0x81, 0x81, 0x81, 0x81, 0x42, 0x3C, // 'O'
  0xFA, 0x18, 0x61, 0xFA, 0x08, 0x20, 0x80, // 'P'
  0x3C, 0x42, 0x81, 0x81, 0x81, 0x81, 0x81, 0x42, 0x3C, 0x04, 0x02, // 'Q'
  0xF8, 0x84, 0x84, 0x84, 0xF8, 0x8C, 0x84, 0x86, 0x82, // 'R'
  0x7E, 0x18, 0x30, 0x78, 0x10, 0x61, 0xF8, // 'S'
  0xFE, 0x20, 0x40, 0x81, 0x02, 0x04, 0x08, 0x10, // 'T'
  0x83, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xE3, 0x7C, // 'U'
  0xC1, 0x21, 0x90, 0x8C, 0x42, 0x41, 0x20, 0x70, 0x30, 0x18, 0x00, // 'V'
  0x46, 0x24, 0x62, 0x46, 0x24, 0xA6, 0x69, 0x42, 0x94, 0x29, 0x43, 0x1C, 0x30, 0x80, // 'W'
  0x42, 0x26, 0x34, 0x18, 0x18, 0x1C, 0x24, 0x62, 0x43, // 'X'
  0x43, 0x11, 0x05, 0x02, 0x80, 0x80, 0x40, 0x20, 0x10, 0x08, 0x00, // 'Y'
  0xFE, 0x0C, 0x30, 0x41, 0x04, 0x18, 0x60, 0xFE, // 'Z'
  0xD2, 0x49, 0x24, 0x93, 0x00, // '['
  0x84, 0x10, 0x84, 0x10, 0x84, 0x20, 0x84, // '\'
  0x64, 0x92, 0x49, 0x25, 0x80, // ']'
  0x18, 0x34, 0x62, 0x81, // '^'
  0x7E, // '_'
  0x89, 0x00, // '`'
  0xFA, 0x30, 0x5F, 0x86, 0x37, 0x40, // 'a'
  0x82, 0x08, 0x2E, 0xCE, 0x18, 0x61, 0xCE, 0xE0, // 'b'
  0x7E, 0x21, 0x08, 0x61, 0xE0, // 'c'
  0x04, 0x10, 0x5D, 0xCE, 0x18, 0x61, 0xCD, 0xD0, // 'd'
  0x7B, 0x38, 0x7F, 0x83, 0x07, 0xC0, // 'e'
  0x18, 0x82, 0x1E, 0x20, 0x82, 0x08, 0x20, 0x80, // 'f'
  0x77, 0x38, 0x61, 0x87, 0x37, 0x41, 0x0D, 0xE0, // 'g'
  0x84, 0x21, 0x6C, 0xC6, 0x31, 0x8C, 0x40, // 'h'
  0x9F, 0xC0, // 'i'
  0x20, 0x12, 0x49, 0x24, 0x94, // 'j'
  0x82, 0x08, 0x22, 0x92, 0x8C, 0x28, 0x92, 0x20, // 'k'
  0xFF, 0xC0, // 'l'
  0xB3, 0x66, 0x62, 0x31, 0x18, 0x8C, 0x46, 0x22, // 'm'
  0xB6, 0x63, 0x18, 0xC6, 0x20, // 'n'
  0x7B, 0x38, 0x61, 0x87, 0x37, 0x80, // 'o'
  0xBB, 0x38, 0x61, 0x87, 0x3B, 0xA0, 0x82, 0x00, // 'p'
  0x77, 0x38, 0x61, 0x87, 0x37, 0x41, 0x04, 0x10, // 'q'
  0x0B, 0xC8, 0x88, 0x88, // 'r'
  0x3D, 0x04, 0x0E, 0x04, 0x17, 0x80, // 's'
  0x42, 0x3C, 0x84, 0x21, 0x08, 0x70, // 't'
  0x04, 0x63, 0x18, 0xC6, 0x6D, // 'u'
  0x46, 0x89, 0x11, 0x62, 0x85, 0x04, 0x00, // 'v'
  0x4C, 0x93, 0x24, 0xC9, 0x54, 0x33, 0x0C, 0xC3, 0x30, // 'w'
  0x44, 0x58, 0xE0, 0x82, 0x8D, 0x91, 0x00, // 'x'
  0x46, 0x89, 0x11, 0x42, 0x85, 0x04, 0x08, 0x30, 0xC0, // 'y'
  0xFC, 0x21, 0x08, 0x63, 0x0F, 0xC0, // 'z'
  0x39, 0x08, 0x42, 0x60, 0x84, 0x21, 0x08, 0x70, // '{'
  0xFF, 0xF0, // '|'
  0xE1, 0x08, 0x42, 0x0C, 0x84, 0x21, 0x09, 0xC0 // '}'
};
const GFXglyph Dialog_plain_12Glyphs[] PROGMEM = {
  // bitmapOffset, width, height, xAdvance, xOffset, yOffset
  {     0,   1,   1,   5,    0,    0 }, // ' '
  {     1,   1,   9,   6,    2,   -9 }, // '!'
  {     3,   3,   3,   6,    1,   -9 }, // '"'
  {     5,  10,   9,  11,    0,   -9 }, // '#'
  {    17,   6,  11,   9,    1,  -10 }, // '$'
  {    26,  10,   9,  13,    1,   -9 }, // '%'
  {    38,   9,   9,  10,    1,   -9 }, // '&'
  {    49,   1,   3,   4,    1,   -9 }, // '''
  {    50,   3,  11,   6,    1,  -10 }, // '('
  {    55,   3,  11,   6,    1,  -10 }, // ')'
  {    60,   7,   5,   8,    0,   -9 }, // '*'
  {    65,   8,   8,  11,    1,   -8 }, // '+'
  {    73,   2,   3,   4,    0,   -2 }, // ','
  {    74,   3,   1,   6,    1,   -4 }, // '-'
  {    75,   1,   1,   4,    1,   -1 }, // '.'
  {    76,   5,  11,   5,    0,   -9 }, // '/'
  {    83,   6,   9,   9,    1,   -9 }, // '0'
  {    90,   6,   9,   8,    0,   -9 }, // '1'
  {    97,   5,   9,   8,    1,   -9 }, // '2'
  {   103,   6,   9,   8,    0,   -9 }, // '3'
  {   110,   7,   9,   9,    1,   -9 }, // '4'
  {   118,   6,   9,   8,    0,   -9 }, // '5'
  {   125,   6,   9,   9,    1,   -9 }, // '6'
  {   132,   6,   9,   9,    1,   -9 }, // '7'
  {   139,   6,   9,   9,    1,   -9 }, // '8'
  {   146,   6,   9,   9,    1,   -9 }, // '9'
  {   153,   1,   6,   4,    1,   -6 }, // ':'
  {   154,   2,   8,   4,    0,   -7 }, // ';'
  {   156,   8,   8,  11,    1,   -8 }, // '<'
  {   164,   8,   4,  11,    1,   -6 }, // '='
  {   168,   8,   8,  11,    1,   -8 }, // '>'
  {   176,   5,   9,   7,    0,   -9 }, // '?'
  {   182,  10,  11,  13,    1,   -9 }, // '@'
  {   196,   9,   9,   9,    0,   -9 }, // 'A'
  {   207,   6,   9,   9,    1,   -9 }, // 'B'
  {   214,   7,   9,  10,    1,   -9 }, // 'C'
  {   222,   7,   9,  10,    1,   -9 }, // 'D'
  {   230,   6,   9,   8,    1,   -9 }, // 'E'
  {   237,   5,   9,   8,    1,   -9 }, // 'F'
  {   243,   8,   9,  11,    1,   -9 }, // 'G'
  {   252,   7,   9,  10,    1,   -9 }, // 'H'
  {   260,   1,   9,   4,    1,   -9 }, // 'I'
  {   262,   3,  12,   4,   -1,   -9 }, // 'J'
  {   267,   7,   9,   9,    1,   -9 }, // 'K'
  {   275,   6,   9,   7,    1,   -9 }, // 'L'
  {   282,   8,   9,  11,    1,   -9 }, // 'M'
  {   291,   7,   9,  10,    1,   -9 }, // 'N'
  {   299,   8,   9,  11,    1,   -9 }, // 'O'
  {   308,   6,   9,   9,    1,   -9 }, // 'P'
  {   315,   8,  11,  11,    1,   -9 }, // 'Q'
  {   326,   8,   9,  10,    1,   -9 }, // 'R'
  {   335,   6,   9,   9,    1,   -9 }, // 'S'
  {   342,   7,   9,   8,    0,   -9 }, // 'T'
  {   350,   7,   9,  10,    1,   -9 }, // 'U'
  {   358,   9,   9,   9,    0,   -9 }, // 'V'
  {   369,  12,   9,  13,    0,   -9 }, // 'W'
  {   383,   8,   9,   9,    0,   -9 }, // 'X'
  {   392,   9,   9,   8,   -1,   -9 }, // 'Y'
  {   403,   7,   9,  10,    1,   -9 }, // 'Z'
  {   411,   3,  11,   6,    1,  -10 }, // '['
  {   416,   5,  11,   5,    0,   -9 }, // '\'
  {   423,   3,  11,   6,    1,  -10 }, // ']'
  {   428,   8,   4,  11,    1,   -9 }, // '^'
  {   432,   8,   1,   7,   -1,    2 }, // '_'
  {   433,   3,   3,   7,    1,  -11 }, // '`'
  {   435,   6,   7,   9,    1,   -7 }, // 'a'
  {   441,   6,  10,   9,    1,  -10 }, // 'b'
  {   449,   5,   7,   8,    1,   -7 }, // 'c'
  {   454,   6,  10,   9,    1,  -10 }, // 'd'
  {   462,   6,   7,   9,    1,   -7 }, // 'e'
  {   468,   6,  10,   5,   -1,  -10 }, // 'f'
  {   476,   6,  10,   9,    1,   -7 }, // 'g'
  {   484,   5,  10,   8,    1,  -10 }, // 'h'
  {   491,   1,  10,   4,    1,  -10 }, // 'i'
  {   493,   3,  13,   4,   -1,  -10 }, // 'j'
  {   498,   6,  10,   8,    1,  -10 }, // 'k'
  {   506,   1,  10,   4,    1,  -10 }, // 'l'
  {   508,   9,   7,  12,    1,   -7 }, // 'm'
  {   516,   5,   7,   8,    1,   -7 }, // 'n'
  {   521,   6,   7,   9,    1,   -7 }, // 'o'
  {   527,   6,  10,   9,    1,   -7 }, // 'p'
  {   535,   6,  10,   9,    1,   -7 }, // 'q'
  {   543,   4,   8,   6,    1,   -8 }, // 'r'
  {   547,   6,   7,   8,    0,   -7 }, // 's'
  {   553,   5,   9,   6,    0,   -9 }, // 't'
  {   559,   5,   8,   8,    1,   -8 }, // 'u'
  {   564,   7,   7,   8,    0,   -7 }, // 'v'
  {   571,  10,   7,  11,    0,   -7 }, // 'w'
  {   580,   7,   7,   8,    0,   -7 }, // 'x'
  {   587,   7,  10,   8,    0,   -7 }, // 'y'
  {   596,   6,   7,   8,    1,   -7 }, // 'z'
  {   602,   5,  12,   8,    1,  -10 }, // '{'
  {   610,   1,  12,   6,    2,  -10 }, // '|'
  {   612,   5,  12,   8,    1,  -10 } // '}'
};
const GFXfont Dialog_plain_12 PROGMEM = {
  (uint8_t  *)Dialog_plain_12Bitmaps, (GFXglyph *)Dialog_plain_12Glyphs, 0x20, 0x7E, 15
};

//-------
// Created by http://oleddisplay.squix.ch/ Consider a donation
// In case of problems make sure that you are using the font file with the correct version!
const uint8_t Dialog_plain_13Bitmaps[] PROGMEM = {

  // Bitmap Data:
  0x00, // ' '
  0xFC, 0x80, // '!'
  0xB6, 0x80, // '"'
  0x0A, 0x09, 0x04, 0x8F, 0xF1, 0x61, 0x23, 0xFC, 0x48, 0x28, 0x00, // '#'
  0x21, 0xFA, 0x68, 0xE1, 0xE2, 0xC9, 0x2F, 0xE2, 0x00, // '$'
  0x60, 0x92, 0x22, 0x48, 0x49, 0x06, 0x4C, 0x12, 0x42, 0x48, 0x89, 0x20, 0xC0, // '%'
  0x3C, 0x10, 0x04, 0x01, 0x80, 0xD1, 0xA2, 0x48, 0x73, 0x1C, 0x7D, 0x80, // '&'
  0xE0, // '''
  0x4A, 0x49, 0x24, 0x89, 0x00, // '('
  0x49, 0x12, 0x49, 0x49, 0x00, // ')'
  0x10, 0xA8, 0xE3, 0xE1, 0x00, // '*'
  0x08, 0x08, 0x08, 0x08, 0xFF, 0x08, 0x08, 0x08, // '+'
  0x58, // ','
  0xE0, // '-'
  0x80, // '.'
  0x10, 0x8C, 0x42, 0x11, 0x08, 0x44, 0x20, // '/'
  0x79, 0x28, 0x61, 0x86, 0x18, 0x52, 0x78, // '0'
  0x70, 0x41, 0x04, 0x10, 0x41, 0x04, 0x7C, // '1'
  0xFA, 0x30, 0x41, 0x08, 0x42, 0x10, 0xFC, // '2'
  0x7C, 0x04, 0x09, 0xE0, 0x60, 0x40, 0x83, 0x7C, // '3'
  0x0C, 0x0C, 0x14, 0x24, 0x64, 0x44, 0xFE, 0x04, 0x04, // '4'
  0x7C, 0x81, 0x03, 0xC0, 0x60, 0x40, 0xC3, 0xFC, // '5'
  0x3D, 0x08, 0x2E, 0xCE, 0x18, 0x53, 0x78, // '6'
  0xFC, 0x30, 0x86, 0x10, 0x43, 0x08, 0x60, // '7'
  0x7A, 0x18, 0x61, 0x7B, 0x38, 0x61, 0x78, // '8'
  0x7B, 0x28, 0x61, 0xCD, 0xD0, 0x42, 0xF0, // '9'
  0x84, // ':'
  0x40, 0x16, // ';'
  0x00, 0x03, 0x1C, 0xE0, 0xE0, 0x1C, 0x07, 0x00, // '<'
  0xFF, 0x00, 0x00, 0xFF, // '='
  0x00, 0xC0, 0x38, 0x07, 0x07, 0x38, 0xE0, 0x00, // '>'
  0x74, 0x42, 0x33, 0x10, 0x80, 0x20, // '?'
  0x1F, 0x06, 0x19, 0x01, 0x47, 0x99, 0x13, 0x22, 0x64, 0x54, 0x7C, 0x40, 0x04, 0x10, 0x7C, 0x00, // '@'
  0x08, 0x0A, 0x05, 0x06, 0xC2, 0x21, 0x11, 0xFC, 0x82, 0xC1, 0x80, // 'A'
  0xF9, 0x0A, 0x14, 0x2F, 0x90, 0xE0, 0xC3, 0xFC, // 'B'
  0x3E, 0x41, 0x80, 0x80, 0x80, 0x80, 0x80, 0x41, 0x3E, // 'C'
  0xFC, 0x86, 0x83, 0x81, 0x81, 0x81, 0x81, 0x86, 0xFC, // 'D'
  0xFE, 0x08, 0x20, 0xFE, 0x08, 0x20, 0xFC, // 'E'
  0xFA, 0x08, 0x20, 0xFA, 0x08, 0x20, 0x80, // 'F'
  0x3E, 0x41, 0x80, 0x80, 0x87, 0x81, 0x81, 0x41, 0x3E, // 'G'
  0x83, 0x06, 0x0C, 0x1F, 0xF0, 0x60, 0xC1, 0x82, // 'H'
  0xFF, 0x80, // 'I'
  0x24, 0x92, 0x49, 0x24, 0xE0, // 'J'
  0x84, 0x88, 0xB0, 0xE0, 0xE0, 0xB0, 0x98, 0x8C, 0x86, // 'K'
  0x82, 0x08, 0x20, 0x82, 0x08, 0x20, 0xFC, // 'L'
  0xC1, 0xE0, 0xE8, 0xB4, 0x59, 0x4C, 0xA6, 0x73, 0x01, 0x80, 0x80, // 'M'
  0xC3, 0x86, 0x8D, 0x99, 0x33, 0x62, 0xC3, 0x86, // 'N'
  0x3E, 0x31, 0xB0, 0x70, 0x18, 0x0C, 0x06, 0x06, 0x86, 0x3E, 0x00, // 'O'
  0xFA, 0x18, 0x61, 0xFA, 0x08, 0x20, 0x80, // 'P'
  0x3E, 0x31, 0xB0, 0x70, 0x18, 0x0C, 0x06, 0x06, 0x86, 0x3E, 0x01, 0x00, 0x40, // 'Q'
  0xF8, 0x84, 0x84, 0x84, 0xF8, 0x8C, 0x84, 0x86, 0x82, // 'R'
  0x7F, 0x86, 0x06, 0x03, 0xC0, 0x40, 0xC3, 0xFC, // 'S'
  0xFF, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, // 'T'
  0x83, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xE3, 0x7C, // 'U'
  0xC1, 0xA0, 0x90, 0xC4, 0x42, 0x21, 0xB0, 0x50, 0x38, 0x08, 0x00, // 'V'
  0x42, 0x12, 0x28, 0x91, 0x4C, 0xCA, 0x62, 0x52, 0x14, 0x50, 0xA3, 0x87, 0x18, 0x18, 0xC0, // 'W'
  0x61, 0x11, 0x05, 0x83, 0x80, 0x80, 0xA0, 0xD8, 0xC4, 0x41, 0x00, // 'X'
  0x41, 0x11, 0x0D, 0x82, 0x80, 0x80, 0x40, 0x20, 0x10, 0x08, 0x00, // 'Y'
  0xFF, 0x02, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x40, 0xFF, // 'Z'
  0xF2, 0x49, 0x24, 0x93, 0x80, // '['
  0x86, 0x10, 0x84, 0x10, 0x84, 0x10, 0x84, // '\'
  0xE4, 0x92, 0x49, 0x27, 0x80, // ']'
  0x1C, 0x1B, 0x18, 0xD8, 0x30, // '^'
  0x7F, // '_'
  0x84, 0x20, // '`'
  0xFA, 0x30, 0x5F, 0x86, 0x37, 0x40, // 'a'
  0x82, 0x08, 0x2E, 0xCE, 0x18, 0x61, 0xCE, 0xE0, // 'b'
  0x7F, 0x18, 0x20, 0x83, 0x17, 0xC0, // 'c'
  0x04, 0x10, 0x5D, 0xCE, 0x18, 0x61, 0xCD, 0xD0, // 'd'
  0x3C, 0x8E, 0x0F, 0xF8, 0x08, 0x0F, 0x80, // 'e'
  0x18, 0x82, 0x1E, 0x20, 0x82, 0x08, 0x20, 0x80, // 'f'
  0x77, 0x38, 0x61, 0x87, 0x37, 0x41, 0x0D, 0xE0, // 'g'
  0x82, 0x08, 0x2E, 0xC6, 0x18, 0x61, 0x86, 0x10, // 'h'
  0x9F, 0xC0, // 'i'
  0x20, 0x12, 0x49, 0x24, 0x94, // 'j'
  0x81, 0x02, 0x04, 0x49, 0x14, 0x30, 0x50, 0x99, 0x18, // 'k'
  0xFF, 0xC0, // 'l'
  0xB9, 0xD8, 0xC6, 0x10, 0xC2, 0x18, 0x43, 0x08, 0x61, 0x08, // 'm'
  0xBB, 0x18, 0x61, 0x86, 0x18, 0x40, // 'n'
  0x7B, 0x38, 0x61, 0x87, 0x37, 0x80, // 'o'
  0xBB, 0x38, 0x61, 0x87, 0x3B, 0xA0, 0x82, 0x00, // 'p'
  0x77, 0x38, 0x61, 0x87, 0x37, 0x41, 0x04, 0x10, // 'q'
  0x0B, 0xC8, 0x88, 0x88, // 'r'
  0x3D, 0x04, 0x0E, 0x04, 0x17, 0x80, // 's'
  0x42, 0x3C, 0x84, 0x21, 0x08, 0x70, // 't'
  0x02, 0x18, 0x61, 0x86, 0x18, 0xDD, // 'u'
  0x42, 0x46, 0x64, 0x24, 0x2C, 0x38, 0x18, // 'v'
  0x4C, 0x49, 0x89, 0x2A, 0x35, 0x43, 0x28, 0x67, 0x0C, 0x40, // 'w'
  0x46, 0x24, 0x18, 0x18, 0x38, 0x64, 0x42, // 'x'
  0x42, 0x46, 0x64, 0x24, 0x2C, 0x18, 0x18, 0x10, 0x10, 0x60, // 'y'
  0xFC, 0x21, 0x08, 0x63, 0x0F, 0xC0, // 'z'
  0x39, 0x08, 0x42, 0x60, 0x84, 0x21, 0x08, 0x70, // '{'
  0xFF, 0xF0, // '|'
  0xE1, 0x08, 0x42, 0x0C, 0x84, 0x21, 0x09, 0xC0 // '}'
};
const GFXglyph Dialog_plain_13Glyphs[] PROGMEM = {
  // bitmapOffset, width, height, xAdvance, xOffset, yOffset
  {     0,   1,   1,   5,    0,    0 }, // ' '
  {     1,   1,   9,   6,    2,   -9 }, // '!'
  {     3,   3,   3,   6,    1,   -9 }, // '"'
  {     5,   9,   9,  12,    1,   -9 }, // '#'
  {    16,   6,  11,   9,    1,  -10 }, // '$'
  {    25,  11,   9,  14,    1,   -9 }, // '%'
  {    38,  10,   9,  12,    1,   -9 }, // '&'
  {    50,   1,   3,   4,    1,   -9 }, // '''
  {    51,   3,  11,   6,    1,  -10 }, // '('
  {    56,   3,  11,   6,    1,  -10 }, // ')'
  {    61,   7,   5,   8,    0,   -9 }, // '*'
  {    66,   8,   8,  11,    1,   -8 }, // '+'
  {    74,   2,   3,   5,    1,   -2 }, // ','
  {    75,   3,   1,   6,    1,   -4 }, // '-'
  {    76,   1,   1,   4,    1,   -1 }, // '.'
  {    77,   5,  11,   5,    0,   -9 }, // '/'
  {    84,   6,   9,   9,    1,   -9 }, // '0'
  {    91,   6,   9,   9,    1,   -9 }, // '1'
  {    98,   6,   9,   9,    1,   -9 }, // '2'
  {   105,   7,   9,   9,    0,   -9 }, // '3'
  {   113,   8,   9,   9,    0,   -9 }, // '4'
  {   122,   7,   9,   9,    0,   -9 }, // '5'
  {   130,   6,   9,   9,    1,   -9 }, // '6'
  {   137,   6,   9,   9,    1,   -9 }, // '7'
  {   144,   6,   9,   9,    1,   -9 }, // '8'
  {   151,   6,   9,   9,    1,   -9 }, // '9'
  {   158,   1,   6,   6,    2,   -6 }, // ':'
  {   159,   2,   8,   6,    1,   -7 }, // ';'
  {   161,   8,   8,  11,    1,   -8 }, // '<'
  {   169,   8,   4,  11,    1,   -6 }, // '='
  {   173,   8,   8,  11,    1,   -8 }, // '>'
  {   181,   5,   9,   7,    0,   -9 }, // '?'
  {   187,  11,  11,  14,    1,   -9 }, // '@'
  {   203,   9,   9,  10,    0,   -9 }, // 'A'
  {   214,   7,   9,  10,    1,   -9 }, // 'B'
  {   222,   8,   9,  10,    1,   -9 }, // 'C'
  {   231,   8,   9,  11,    1,   -9 }, // 'D'
  {   240,   6,   9,   9,    1,   -9 }, // 'E'
  {   247,   6,   9,   8,    1,   -9 }, // 'F'
  {   254,   8,   9,  11,    1,   -9 }, // 'G'
  {   263,   7,   9,  10,    1,   -9 }, // 'H'
  {   271,   1,   9,   4,    1,   -9 }, // 'I'
  {   273,   3,  12,   4,   -1,   -9 }, // 'J'
  {   278,   8,   9,   9,    1,   -9 }, // 'K'
  {   287,   6,   9,   8,    1,   -9 }, // 'L'
  {   294,   9,   9,  12,    1,   -9 }, // 'M'
  {   305,   7,   9,  10,    1,   -9 }, // 'N'
  {   313,   9,   9,  12,    1,   -9 }, // 'O'
  {   324,   6,   9,   9,    1,   -9 }, // 'P'
  {   331,   9,  11,  12,    1,   -9 }, // 'Q'
  {   344,   8,   9,  10,    1,   -9 }, // 'R'
  {   353,   7,   9,  10,    1,   -9 }, // 'S'
  {   361,   8,   9,   9,    0,   -9 }, // 'T'
  {   370,   7,   9,  10,    1,   -9 }, // 'U'
  {   378,   9,   9,  10,    0,   -9 }, // 'V'
  {   389,  13,   9,  14,    0,   -9 }, // 'W'
  {   404,   9,   9,  10,    0,   -9 }, // 'X'
  {   415,   9,   9,   8,   -1,   -9 }, // 'Y'
  {   426,   8,   9,  11,    1,   -9 }, // 'Z'
  {   435,   3,  11,   6,    1,  -10 }, // '['
  {   440,   5,  11,   5,    0,   -9 }, // '\'
  {   447,   3,  11,   6,    1,  -10 }, // ']'
  {   452,   9,   4,  12,    1,   -9 }, // '^'
  {   457,   8,   1,   8,   -1,    2 }, // '_'
  {   458,   4,   3,   8,    1,  -11 }, // '`'
  {   460,   6,   7,   9,    1,   -7 }, // 'a'
  {   466,   6,  10,   9,    1,  -10 }, // 'b'
  {   474,   6,   7,   8,    1,   -7 }, // 'c'
  {   480,   6,  10,   9,    1,  -10 }, // 'd'
  {   488,   7,   7,  10,    1,   -7 }, // 'e'
  {   495,   6,  10,   5,   -1,  -10 }, // 'f'
  {   503,   6,  10,   9,    1,   -7 }, // 'g'
  {   511,   6,  10,   9,    1,  -10 }, // 'h'
  {   519,   1,  10,   4,    1,  -10 }, // 'i'
  {   521,   3,  13,   4,   -1,  -10 }, // 'j'
  {   526,   7,  10,   8,    1,  -10 }, // 'k'
  {   535,   1,  10,   4,    1,  -10 }, // 'l'
  {   537,  11,   7,  14,    1,   -7 }, // 'm'
  {   547,   6,   7,   9,    1,   -7 }, // 'n'
  {   553,   6,   7,   9,    1,   -7 }, // 'o'
  {   559,   6,  10,   9,    1,   -7 }, // 'p'
  {   567,   6,  10,   9,    1,   -7 }, // 'q'
  {   575,   4,   8,   6,    1,   -8 }, // 'r'
  {   579,   6,   7,   8,    0,   -7 }, // 's'
  {   585,   5,   9,   6,    0,   -9 }, // 't'
  {   591,   6,   8,   9,    1,   -8 }, // 'u'
  {   597,   8,   7,   9,    0,   -7 }, // 'v'
  {   604,  11,   7,  12,    0,   -7 }, // 'w'
  {   614,   8,   7,   9,    0,   -7 }, // 'x'
  {   621,   8,  10,   9,    0,   -7 }, // 'y'
  {   631,   6,   7,   8,    1,   -7 }, // 'z'
  {   637,   5,  12,   9,    2,  -10 }, // '{'
  {   645,   1,  12,   6,    2,  -10 }, // '|'
  {   647,   5,  12,   9,    1,  -10 } // '}'
};
const GFXfont Dialog_plain_13 PROGMEM = {
  (uint8_t  *)Dialog_plain_13Bitmaps, (GFXglyph *)Dialog_plain_13Glyphs, 0x20, 0x7E, 17
};


// Created by http://oleddisplay.squix.ch/ Consider a donation
// In case of problems make sure that you are using the font file with the correct version!
const uint8_t Dialog_plain_15Bitmaps[] PROGMEM = {

  // Bitmap Data:
  0x00, // ' '
  0xFF, 0x30, // '!'
  0x99, 0x99, // '"'
  0x09, 0x02, 0x40, 0x90, 0x24, 0x7F, 0xC4, 0x81, 0x20, 0x48, 0xFF, 0x89, 0x02, 0x40, 0x90, // '#'
  0x10, 0xFF, 0x4C, 0x89, 0x1E, 0x1F, 0x0B, 0x12, 0x26, 0x5F, 0xE1, 0x02, 0x00, // '$'
  0x70, 0x44, 0x42, 0x22, 0x21, 0x13, 0x08, 0x90, 0x39, 0x00, 0x09, 0xC0, 0x91, 0x0C, 0x88, 0x44, 0x44, 0x22, 0x20, 0xE0, // '%'
  0x3E, 0x0C, 0x41, 0x00, 0x20, 0x06, 0x00, 0xE0, 0x36, 0x34, 0x66, 0x86, 0x90, 0x71, 0x0E, 0x1E, 0x60, // '&'
  0xF0, // '''
  0x29, 0x49, 0x24, 0x92, 0x24, 0x40, // '('
  0x89, 0x12, 0x49, 0x24, 0xA5, 0x00, // ')'
  0x11, 0x25, 0xD0, 0xC7, 0xD2, 0x44, 0x00, // '*'
  0x08, 0x04, 0x02, 0x01, 0x0F, 0xF8, 0x40, 0x20, 0x10, 0x08, 0x04, 0x00, // '+'
  0x56, // ','
  0xF0, // '-'
  0xC0, // '.'
  0x08, 0x61, 0x04, 0x30, 0x82, 0x08, 0x61, 0x04, 0x30, 0x80, // '/'
  0x38, 0x8B, 0x14, 0x18, 0x30, 0x60, 0xC1, 0x83, 0x0D, 0x11, 0xC0, // '0'
  0xF1, 0xE0, 0x40, 0x81, 0x02, 0x04, 0x08, 0x10, 0x20, 0x47, 0xF0, // '1'
  0xF9, 0x08, 0x08, 0x10, 0x20, 0x83, 0x0C, 0x30, 0xC3, 0x07, 0xF0, // '2'
  0x7C, 0x06, 0x02, 0x02, 0x06, 0x3C, 0x02, 0x01, 0x01, 0x01, 0x82, 0xFC, // '3'
  0x0C, 0x0C, 0x14, 0x14, 0x24, 0x64, 0x44, 0xC4, 0xFF, 0x04, 0x04, 0x04, // '4'
  0x7C, 0x81, 0x02, 0x07, 0x80, 0x80, 0x81, 0x02, 0x06, 0x17, 0xC0, // '5'
  0x3E, 0xC5, 0x06, 0x0D, 0xDC, 0xB0, 0xE1, 0xC3, 0x85, 0x91, 0xC0, // '6'
  0xFE, 0x0C, 0x10, 0x60, 0xC1, 0x06, 0x0C, 0x10, 0x60, 0xC1, 0x00, // '7'
  0x7D, 0x8E, 0x0C, 0x1C, 0x67, 0x31, 0xC1, 0x83, 0x07, 0x1B, 0xE0, // '8'
  0x38, 0x8A, 0x14, 0x18, 0x30, 0x51, 0x9D, 0x02, 0x0A, 0x17, 0xC0, // '9'
  0xC3, // ':'
  0x50, 0x05, 0x60, // ';'
  0x00, 0x00, 0x70, 0x70, 0xF0, 0xE0, 0x38, 0x03, 0xC0, 0x1E, 0x00, 0xC0, 0x00, // '<'
  0xFF, 0x80, 0x00, 0x1F, 0xF0, // '='
  0x00, 0x30, 0x07, 0x80, 0x38, 0x03, 0xC0, 0xF0, 0xE1, 0xE0, 0xC0, 0x00, 0x00, // '>'
  0xFA, 0x30, 0x41, 0x08, 0x42, 0x08, 0x20, 0x02, 0x08, // '?'
  0x0F, 0x81, 0x83, 0x08, 0x04, 0x80, 0x28, 0x74, 0xC6, 0x66, 0x21, 0x31, 0x09, 0x8C, 0xD4, 0x3B, 0x10, 0x00, 0xC0, 0x43, 0x06, 0x07, 0xC0, // '@'
  0x0C, 0x01, 0x80, 0x78, 0x0D, 0x01, 0x30, 0x66, 0x0C, 0x41, 0x0C, 0x7F, 0x8C, 0x11, 0x03, 0x60, 0x60, // 'A'
  0xFD, 0x0E, 0x0C, 0x18, 0x7F, 0xA1, 0xC1, 0x83, 0x06, 0x1F, 0xE0, // 'B'
  0x1F, 0x10, 0xD0, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 0x80, 0x20, 0x08, 0x63, 0xE0, // 'C'
  0xFC, 0x41, 0xA0, 0x50, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC0, 0xA0, 0xDF, 0x80, // 'D'
  0xFD, 0x02, 0x04, 0x08, 0x1F, 0xA0, 0x40, 0x81, 0x02, 0x07, 0xF0, // 'E'
  0xFE, 0x08, 0x20, 0x83, 0xE8, 0x20, 0x82, 0x08, 0x20, // 'F'
  0x1F, 0x30, 0xD0, 0x10, 0x08, 0x04, 0x02, 0x1F, 0x01, 0x80, 0xA0, 0x58, 0x23, 0xE0, // 'G'
  0x81, 0x81, 0x81, 0x81, 0x81, 0xFF, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, // 'H'
  0xFF, 0xF0, // 'I'
  0x24, 0x92, 0x49, 0x24, 0x92, 0x70, // 'J'
  0x86, 0x46, 0x26, 0x16, 0x0A, 0x06, 0x03, 0x81, 0x60, 0x98, 0x46, 0x21, 0x90, 0x60, // 'K'
  0x81, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x81, 0x02, 0x07, 0xE0, // 'L'
  0xC0, 0xF0, 0x3E, 0x1E, 0x85, 0xB3, 0x64, 0x99, 0x26, 0x79, 0x8C, 0x63, 0x18, 0x06, 0x01, // 'M'
  0xC1, 0xC1, 0xE1, 0xA1, 0xB1, 0x99, 0x99, 0x8D, 0x85, 0x87, 0x83, 0x83, // 'N'
  0x1E, 0x18, 0x64, 0x0A, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0x50, 0x26, 0x18, 0x78, // 'O'
  0xF9, 0x0E, 0x0C, 0x18, 0x30, 0xFE, 0x40, 0x81, 0x02, 0x04, 0x00, // 'P'
  0x1E, 0x18, 0x44, 0x0A, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0x50, 0x22, 0x18, 0x7C, 0x03, 0x00, 0x60, // 'Q'
  0xFC, 0x43, 0x20, 0x90, 0x48, 0x24, 0x33, 0xF1, 0x1C, 0x86, 0x41, 0x20, 0xD0, 0x20, // 'R'
  0x7F, 0x86, 0x04, 0x0C, 0x0F, 0x07, 0x03, 0x02, 0x06, 0x1F, 0xC0, // 'S'
  0xFF, 0x84, 0x02, 0x01, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00, // 'T'
  0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x42, 0x3C, // 'U'
  0xC0, 0xC8, 0x19, 0x82, 0x30, 0xC2, 0x18, 0x62, 0x0C, 0xC0, 0x98, 0x1A, 0x03, 0xC0, 0x38, 0x06, 0x00, // 'V'
  0x43, 0x04, 0x87, 0x19, 0x8A, 0x33, 0x14, 0x62, 0x28, 0x84, 0xD1, 0x09, 0x16, 0x1A, 0x2C, 0x34, 0x50, 0x38, 0xA0, 0x61, 0xC0, 0xC1, 0x80, // 'W'
  0x60, 0x88, 0x63, 0x30, 0x68, 0x0E, 0x03, 0x00, 0xE0, 0x68, 0x13, 0x0C, 0x46, 0x19, 0x03, // 'X'
  0xC1, 0xB1, 0x88, 0x86, 0xC1, 0x40, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00, // 'Y'
  0xFF, 0x80, 0xC0, 0xC0, 0xC0, 0x40, 0x60, 0x60, 0x20, 0x30, 0x30, 0x30, 0x1F, 0xF0, // 'Z'
  0xF2, 0x49, 0x24, 0x92, 0x49, 0xC0, // '['
  0x83, 0x04, 0x10, 0x60, 0x82, 0x08, 0x30, 0x41, 0x06, 0x08, // '\'
  0xE4, 0x92, 0x49, 0x24, 0x93, 0xC0, // ']'
  0x0C, 0x07, 0x83, 0x31, 0x86, 0x40, 0xC0, // '^'
  0xFF, // '_'
  0x46, 0x20, // '`'
  0xF9, 0x08, 0x08, 0x17, 0xF8, 0x60, 0xC3, 0x7A, // 'a'
  0x81, 0x02, 0x05, 0xCC, 0x50, 0x60, 0xC1, 0x83, 0x07, 0x15, 0xC0, // 'b'
  0x3E, 0x86, 0x04, 0x08, 0x10, 0x20, 0x21, 0x3E, // 'c'
  0x02, 0x04, 0x09, 0xD4, 0x70, 0x60, 0xC1, 0x83, 0x05, 0x19, 0xD0, // 'd'
  0x38, 0x8A, 0x0C, 0x1F, 0xF0, 0x20, 0x21, 0x3E, // 'e'
  0x3A, 0x11, 0xF4, 0x21, 0x08, 0x42, 0x10, 0x80, // 'f'
  0x3A, 0x8E, 0x0C, 0x18, 0x30, 0x60, 0xA3, 0x3A, 0x04, 0x13, 0xC0, // 'g'
  0x81, 0x02, 0x05, 0xEC, 0x70, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x10, // 'h'
  0xDF, 0xF0, // 'i'
  0x24, 0x12, 0x49, 0x24, 0x92, 0x70, // 'j'
  0x81, 0x02, 0x04, 0x69, 0x96, 0x38, 0x70, 0xB1, 0x32, 0x24, 0x20, // 'k'
  0xFF, 0xF0, // 'l'
  0xB9, 0xD9, 0xCE, 0x10, 0xC2, 0x18, 0x43, 0x08, 0x61, 0x0C, 0x21, 0x84, 0x20, // 'm'
  0xBD, 0x8E, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x82, // 'n'
  0x38, 0x8A, 0x0C, 0x18, 0x30, 0x60, 0xA2, 0x38, // 'o'
  0xB9, 0x8A, 0x0C, 0x18, 0x30, 0x60, 0xE2, 0xB9, 0x02, 0x04, 0x00, // 'p'
  0x3A, 0x8E, 0x0C, 0x18, 0x30, 0x60, 0xA3, 0x3A, 0x04, 0x08, 0x10, // 'q'
  0x05, 0xB1, 0x08, 0x42, 0x10, 0x84, 0x00, // 'r'
  0x7E, 0x18, 0x30, 0x78, 0x30, 0x61, 0xF8, // 's'
  0x42, 0x11, 0xF4, 0x21, 0x08, 0x42, 0x10, 0x70, // 't'
  0x01, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0xC6, 0xF4, // 'u'
  0x41, 0x21, 0x98, 0xC4, 0x42, 0x61, 0xB0, 0x50, 0x38, 0x1C, 0x00, // 'v'
  0x46, 0x34, 0x62, 0x67, 0x26, 0xD6, 0x29, 0x62, 0x94, 0x39, 0x43, 0x8C, 0x18, 0xC0, // 'w'
  0x63, 0x11, 0x0D, 0x83, 0x81, 0x80, 0xE0, 0xD8, 0xC4, 0x43, 0x00, // 'x'
  0xC1, 0x21, 0x98, 0x84, 0xC2, 0x61, 0xA0, 0x70, 0x30, 0x08, 0x0C, 0x04, 0x0E, 0x00, // 'y'
  0xFE, 0x0C, 0x30, 0xC1, 0x06, 0x18, 0x60, 0xFE, // 'z'
  0x0E, 0x20, 0x40, 0x81, 0x02, 0x04, 0x70, 0x10, 0x20, 0x40, 0x81, 0x02, 0x03, 0x80, // '{'
  0xFF, 0xFF, // '|'
  0xC0, 0x82, 0x08, 0x20, 0x82, 0x07, 0x20, 0x82, 0x08, 0x20, 0x8C, 0x00 // '}'
};
const GFXglyph Dialog_plain_15Glyphs[] PROGMEM = {
  // bitmapOffset, width, height, xAdvance, xOffset, yOffset
  {     0,   1,   1,   6,    0,    0 }, // ' '
  {     1,   1,  12,   6,    2,  -12 }, // '!'
  {     3,   4,   4,   7,    1,  -12 }, // '"'
  {     5,  10,  12,  13,    1,  -12 }, // '#'
  {    20,   7,  14,  10,    1,  -12 }, // '$'
  {    33,  13,  12,  16,    1,  -12 }, // '%'
  {    53,  11,  12,  13,    1,  -12 }, // '&'
  {    70,   1,   4,   4,    1,  -12 }, // '''
  {    71,   3,  14,   6,    1,  -12 }, // '('
  {    77,   3,  14,   6,    1,  -12 }, // ')'
  {    83,   7,   7,   8,    0,  -12 }, // '*'
  {    90,   9,  10,  14,    2,  -10 }, // '+'
  {   102,   2,   4,   5,    1,   -2 }, // ','
  {   103,   4,   1,   7,    1,   -5 }, // '-'
  {   104,   1,   2,   6,    2,   -2 }, // '.'
  {   105,   6,  13,   6,    0,  -12 }, // '/'
  {   115,   7,  12,  10,    1,  -12 }, // '0'
  {   126,   7,  12,  11,    2,  -12 }, // '1'
  {   137,   7,  12,  11,    1,  -12 }, // '2'
  {   148,   8,  12,  11,    1,  -12 }, // '3'
  {   160,   8,  12,  10,    1,  -12 }, // '4'
  {   172,   7,  12,  10,    1,  -12 }, // '5'
  {   183,   7,  12,  10,    1,  -12 }, // '6'
  {   194,   7,  12,  10,    1,  -12 }, // '7'
  {   205,   7,  12,  10,    1,  -12 }, // '8'
  {   216,   7,  12,  10,    1,  -12 }, // '9'
  {   227,   1,   8,   6,    2,   -8 }, // ':'
  {   228,   2,  10,   6,    1,   -8 }, // ';'
  {   231,  10,  10,  14,    2,  -10 }, // '<'
  {   244,   9,   4,  14,    2,   -7 }, // '='
  {   249,  10,  10,  14,    2,  -10 }, // '>'
  {   262,   6,  12,   9,    1,  -12 }, // '?'
  {   271,  13,  14,  16,    1,  -11 }, // '@'
  {   294,  11,  12,  11,    0,  -12 }, // 'A'
  {   311,   7,  12,  10,    1,  -12 }, // 'B'
  {   322,   9,  12,  12,    1,  -12 }, // 'C'
  {   336,   9,  12,  12,    1,  -12 }, // 'D'
  {   350,   7,  12,  10,    1,  -12 }, // 'E'
  {   361,   6,  12,   9,    1,  -12 }, // 'F'
  {   370,   9,  12,  12,    1,  -12 }, // 'G'
  {   384,   8,  12,  11,    1,  -12 }, // 'H'
  {   396,   1,  12,   4,    1,  -12 }, // 'I'
  {   398,   3,  15,   4,   -1,  -12 }, // 'J'
  {   404,   9,  12,  10,    1,  -12 }, // 'K'
  {   418,   7,  12,   8,    1,  -12 }, // 'L'
  {   429,  10,  12,  13,    1,  -12 }, // 'M'
  {   444,   8,  12,  11,    1,  -12 }, // 'N'
  {   456,  10,  12,  13,    1,  -12 }, // 'O'
  {   471,   7,  12,  10,    1,  -12 }, // 'P'
  {   482,  10,  14,  13,    1,  -12 }, // 'Q'
  {   500,   9,  12,  11,    1,  -12 }, // 'R'
  {   514,   7,  12,  10,    1,  -12 }, // 'S'
  {   525,   9,  12,  10,    0,  -12 }, // 'T'
  {   539,   8,  12,  11,    1,  -12 }, // 'U'
  {   551,  11,  12,  11,    0,  -12 }, // 'V'
  {   568,  15,  12,  16,    0,  -12 }, // 'W'
  {   591,  10,  12,  11,    0,  -12 }, // 'X'
  {   606,   9,  12,  10,    0,  -12 }, // 'Y'
  {   620,   9,  12,  12,    1,  -12 }, // 'Z'
  {   634,   3,  14,   6,    1,  -12 }, // '['
  {   640,   6,  13,   6,    0,  -12 }, // '\'
  {   650,   3,  14,   6,    1,  -12 }, // ']'
  {   656,  10,   5,  14,    1,  -12 }, // '^'
  {   663,   8,   1,   9,    0,    3 }, // '_'
  {   664,   4,   3,   9,    1,  -13 }, // '`'
  {   666,   7,   9,  10,    1,   -9 }, // 'a'
  {   674,   7,  12,  10,    1,  -12 }, // 'b'
  {   685,   7,   9,   9,    1,   -9 }, // 'c'
  {   693,   7,  12,  10,    1,  -12 }, // 'd'
  {   704,   7,   9,  10,    1,   -9 }, // 'e'
  {   712,   5,  12,   7,    1,  -12 }, // 'f'
  {   720,   7,  12,  10,    1,   -9 }, // 'g'
  {   731,   7,  12,  10,    1,  -12 }, // 'h'
  {   742,   1,  12,   4,    1,  -12 }, // 'i'
  {   744,   3,  15,   4,   -1,  -12 }, // 'j'
  {   750,   7,  12,   9,    1,  -12 }, // 'k'
  {   761,   1,  12,   4,    1,  -12 }, // 'l'
  {   763,  11,   9,  14,    1,   -9 }, // 'm'
  {   776,   7,   9,  10,    1,   -9 }, // 'n'
  {   784,   7,   9,  10,    1,   -9 }, // 'o'
  {   792,   7,  12,  10,    1,   -9 }, // 'p'
  {   803,   7,  12,  10,    1,   -9 }, // 'q'
  {   814,   5,  10,   6,    1,  -10 }, // 'r'
  {   821,   6,   9,   9,    1,   -9 }, // 's'
  {   828,   5,  12,   8,    1,  -12 }, // 't'
  {   836,   7,  10,  10,    1,  -10 }, // 'u'
  {   845,   9,   9,  10,    0,   -9 }, // 'v'
  {   856,  12,   9,  13,    0,   -9 }, // 'w'
  {   870,   9,   9,  10,    0,   -9 }, // 'x'
  {   881,   9,  12,  10,    0,   -9 }, // 'y'
  {   895,   7,   9,  10,    1,   -9 }, // 'z'
  {   903,   7,  15,  10,    1,  -12 }, // '{'
  {   917,   1,  16,   6,    2,  -12 }, // '|'
  {   919,   6,  15,  10,    2,  -12 } // '}'
};
const GFXfont Dialog_plain_15 PROGMEM = {
  (uint8_t  *)Dialog_plain_15Bitmaps, (GFXglyph *)Dialog_plain_15Glyphs, 0x20, 0x7E, 18
};
